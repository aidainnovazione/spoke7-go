// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v6.30.1
// source: services/sumo_integration_data_source.service.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	SumoIntegrationDataSourceService_ImportRoadNetworkFromXml_FullMethodName = "/pb.SumoIntegrationDataSourceService/ImportRoadNetworkFromXml"
	SumoIntegrationDataSourceService_ImportFromXml_FullMethodName            = "/pb.SumoIntegrationDataSourceService/ImportFromXml"
)

// SumoIntegrationDataSourceServiceClient is the client API for SumoIntegrationDataSourceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SumoIntegrationDataSourceServiceClient interface {
	// Import road network from XML file
	// return id of the created road network or an error message
	// @Summary Import road network from XML file
	// @Description Import road network from XML file
	// @Tags SumoIntegration
	// @Accept json
	// @Produce json
	// @Param xml body XmlFile true "XML file"
	// @Success 200 {object} RoadNetworkImportResponse
	ImportRoadNetworkFromXml(ctx context.Context, in *RoadNetworkImportRequest, opts ...grpc.CallOption) (*RoadNetworkImportResponse, error)
	ImportFromXml(ctx context.Context, in *ImportRequest, opts ...grpc.CallOption) (*ImportResponse, error)
}

type sumoIntegrationDataSourceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSumoIntegrationDataSourceServiceClient(cc grpc.ClientConnInterface) SumoIntegrationDataSourceServiceClient {
	return &sumoIntegrationDataSourceServiceClient{cc}
}

func (c *sumoIntegrationDataSourceServiceClient) ImportRoadNetworkFromXml(ctx context.Context, in *RoadNetworkImportRequest, opts ...grpc.CallOption) (*RoadNetworkImportResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RoadNetworkImportResponse)
	err := c.cc.Invoke(ctx, SumoIntegrationDataSourceService_ImportRoadNetworkFromXml_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sumoIntegrationDataSourceServiceClient) ImportFromXml(ctx context.Context, in *ImportRequest, opts ...grpc.CallOption) (*ImportResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ImportResponse)
	err := c.cc.Invoke(ctx, SumoIntegrationDataSourceService_ImportFromXml_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SumoIntegrationDataSourceServiceServer is the server API for SumoIntegrationDataSourceService service.
// All implementations must embed UnimplementedSumoIntegrationDataSourceServiceServer
// for forward compatibility.
type SumoIntegrationDataSourceServiceServer interface {
	// Import road network from XML file
	// return id of the created road network or an error message
	// @Summary Import road network from XML file
	// @Description Import road network from XML file
	// @Tags SumoIntegration
	// @Accept json
	// @Produce json
	// @Param xml body XmlFile true "XML file"
	// @Success 200 {object} RoadNetworkImportResponse
	ImportRoadNetworkFromXml(context.Context, *RoadNetworkImportRequest) (*RoadNetworkImportResponse, error)
	ImportFromXml(context.Context, *ImportRequest) (*ImportResponse, error)
	mustEmbedUnimplementedSumoIntegrationDataSourceServiceServer()
}

// UnimplementedSumoIntegrationDataSourceServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedSumoIntegrationDataSourceServiceServer struct{}

func (UnimplementedSumoIntegrationDataSourceServiceServer) ImportRoadNetworkFromXml(context.Context, *RoadNetworkImportRequest) (*RoadNetworkImportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportRoadNetworkFromXml not implemented")
}
func (UnimplementedSumoIntegrationDataSourceServiceServer) ImportFromXml(context.Context, *ImportRequest) (*ImportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportFromXml not implemented")
}
func (UnimplementedSumoIntegrationDataSourceServiceServer) mustEmbedUnimplementedSumoIntegrationDataSourceServiceServer() {
}
func (UnimplementedSumoIntegrationDataSourceServiceServer) testEmbeddedByValue() {}

// UnsafeSumoIntegrationDataSourceServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SumoIntegrationDataSourceServiceServer will
// result in compilation errors.
type UnsafeSumoIntegrationDataSourceServiceServer interface {
	mustEmbedUnimplementedSumoIntegrationDataSourceServiceServer()
}

func RegisterSumoIntegrationDataSourceServiceServer(s grpc.ServiceRegistrar, srv SumoIntegrationDataSourceServiceServer) {
	// If the following call pancis, it indicates UnimplementedSumoIntegrationDataSourceServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&SumoIntegrationDataSourceService_ServiceDesc, srv)
}

func _SumoIntegrationDataSourceService_ImportRoadNetworkFromXml_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoadNetworkImportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumoIntegrationDataSourceServiceServer).ImportRoadNetworkFromXml(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SumoIntegrationDataSourceService_ImportRoadNetworkFromXml_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumoIntegrationDataSourceServiceServer).ImportRoadNetworkFromXml(ctx, req.(*RoadNetworkImportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SumoIntegrationDataSourceService_ImportFromXml_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumoIntegrationDataSourceServiceServer).ImportFromXml(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SumoIntegrationDataSourceService_ImportFromXml_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumoIntegrationDataSourceServiceServer).ImportFromXml(ctx, req.(*ImportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SumoIntegrationDataSourceService_ServiceDesc is the grpc.ServiceDesc for SumoIntegrationDataSourceService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SumoIntegrationDataSourceService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.SumoIntegrationDataSourceService",
	HandlerType: (*SumoIntegrationDataSourceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ImportRoadNetworkFromXml",
			Handler:    _SumoIntegrationDataSourceService_ImportRoadNetworkFromXml_Handler,
		},
		{
			MethodName: "ImportFromXml",
			Handler:    _SumoIntegrationDataSourceService_ImportFromXml_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/sumo_integration_data_source.service.proto",
}
