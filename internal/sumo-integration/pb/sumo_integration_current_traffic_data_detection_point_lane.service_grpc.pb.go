// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v6.30.1
// source: services/sumo_integration_current_traffic_data_detection_point_lane.service.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	SumoIntegrationCurrentTrafficDataByDetectionPointByLaneService_SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXml_FullMethodName = "/pb.SumoIntegrationCurrentTrafficDataByDetectionPointByLaneService/SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXml"
)

// SumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceClient is the client API for SumoIntegrationCurrentTrafficDataByDetectionPointByLaneService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceClient interface {
	SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXml(ctx context.Context, in *SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXmlRequest, opts ...grpc.CallOption) (*SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXmlResponse, error)
}

type sumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceClient(cc grpc.ClientConnInterface) SumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceClient {
	return &sumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceClient{cc}
}

func (c *sumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceClient) SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXml(ctx context.Context, in *SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXmlRequest, opts ...grpc.CallOption) (*SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXmlResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXmlResponse)
	err := c.cc.Invoke(ctx, SumoIntegrationCurrentTrafficDataByDetectionPointByLaneService_SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXml_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceServer is the server API for SumoIntegrationCurrentTrafficDataByDetectionPointByLaneService service.
// All implementations must embed UnimplementedSumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceServer
// for forward compatibility.
type SumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceServer interface {
	SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXml(context.Context, *SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXmlRequest) (*SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXmlResponse, error)
	mustEmbedUnimplementedSumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceServer()
}

// UnimplementedSumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedSumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceServer struct{}

func (UnimplementedSumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceServer) SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXml(context.Context, *SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXmlRequest) (*SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXmlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXml not implemented")
}
func (UnimplementedSumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceServer) mustEmbedUnimplementedSumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceServer() {
}
func (UnimplementedSumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceServer) testEmbeddedByValue() {
}

// UnsafeSumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceServer will
// result in compilation errors.
type UnsafeSumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceServer interface {
	mustEmbedUnimplementedSumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceServer()
}

func RegisterSumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceServer(s grpc.ServiceRegistrar, srv SumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceServer) {
	// If the following call pancis, it indicates UnimplementedSumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&SumoIntegrationCurrentTrafficDataByDetectionPointByLaneService_ServiceDesc, srv)
}

func _SumoIntegrationCurrentTrafficDataByDetectionPointByLaneService_SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXml_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXmlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceServer).SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXml(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SumoIntegrationCurrentTrafficDataByDetectionPointByLaneService_SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXml_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceServer).SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXml(ctx, req.(*SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXmlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SumoIntegrationCurrentTrafficDataByDetectionPointByLaneService_ServiceDesc is the grpc.ServiceDesc for SumoIntegrationCurrentTrafficDataByDetectionPointByLaneService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SumoIntegrationCurrentTrafficDataByDetectionPointByLaneService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.SumoIntegrationCurrentTrafficDataByDetectionPointByLaneService",
	HandlerType: (*SumoIntegrationCurrentTrafficDataByDetectionPointByLaneServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXml",
			Handler:    _SumoIntegrationCurrentTrafficDataByDetectionPointByLaneService_SumoIntegrationCreateCurrentTrafficDataByDetectionPointByLaneFromXml_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/sumo_integration_current_traffic_data_detection_point_lane.service.proto",
}
