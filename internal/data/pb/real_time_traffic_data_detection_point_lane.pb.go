// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.1
// source: dtos/real_time_traffic_data_detection_point_lane.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VehicleClassType int32

const (
	VehicleClassType_VEHICLE_CLASS_1     VehicleClassType = 0 // (moto)
	VehicleClassType_VEHICLE_CLASS_2     VehicleClassType = 1 // (auto)
	VehicleClassType_VEHICLE_CLASS_3     VehicleClassType = 2 // (auto con rimorchio)
	VehicleClassType_VEHICLE_CLASS_4     VehicleClassType = 3 // (furgone)
	VehicleClassType_VEHICLE_CLASS_5     VehicleClassType = 4 // (camion)
	VehicleClassType_VEHICLE_CLASS_6     VehicleClassType = 5 // (autotreno)
	VehicleClassType_VEHICLE_CLASS_7     VehicleClassType = 6 // (autoarticolato)
	VehicleClassType_VEHICLE_CLASS_8     VehicleClassType = 7 // (autobus)
	VehicleClassType_VEHICLE_CLASS_OTHER VehicleClassType = 8 // (non classificato)
)

// Enum value maps for VehicleClassType.
var (
	VehicleClassType_name = map[int32]string{
		0: "VEHICLE_CLASS_1",
		1: "VEHICLE_CLASS_2",
		2: "VEHICLE_CLASS_3",
		3: "VEHICLE_CLASS_4",
		4: "VEHICLE_CLASS_5",
		5: "VEHICLE_CLASS_6",
		6: "VEHICLE_CLASS_7",
		7: "VEHICLE_CLASS_8",
		8: "VEHICLE_CLASS_OTHER",
	}
	VehicleClassType_value = map[string]int32{
		"VEHICLE_CLASS_1":     0,
		"VEHICLE_CLASS_2":     1,
		"VEHICLE_CLASS_3":     2,
		"VEHICLE_CLASS_4":     3,
		"VEHICLE_CLASS_5":     4,
		"VEHICLE_CLASS_6":     5,
		"VEHICLE_CLASS_7":     6,
		"VEHICLE_CLASS_8":     7,
		"VEHICLE_CLASS_OTHER": 8,
	}
)

func (x VehicleClassType) Enum() *VehicleClassType {
	p := new(VehicleClassType)
	*p = x
	return p
}

func (x VehicleClassType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VehicleClassType) Descriptor() protoreflect.EnumDescriptor {
	return file_dtos_real_time_traffic_data_detection_point_lane_proto_enumTypes[0].Descriptor()
}

func (VehicleClassType) Type() protoreflect.EnumType {
	return &file_dtos_real_time_traffic_data_detection_point_lane_proto_enumTypes[0]
}

func (x VehicleClassType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VehicleClassType.Descriptor instead.
func (VehicleClassType) EnumDescriptor() ([]byte, []int) {
	return file_dtos_real_time_traffic_data_detection_point_lane_proto_rawDescGZIP(), []int{0}
}

// i dati così come rilevati e trasmessi dai dispositivi periferici (sezione A.1) e preserva
// quindi la massima disaggregazione del dato. I dati vengono inseriti nel database disaggregato dopo
// essere stati estratti dai pacchetti utilizzati per la trasmissione
type RealTimeTrafficDataByDetectionPointByLane struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ModifiedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=modified_at,json=modifiedAt,proto3" json:"modified_at,omitempty"`
	// localizzazione e caratterizzaziobne rilievo
	DataSourceName      string `protobuf:"bytes,3,opt,name=data_source_name,json=dataSourceName,proto3" json:"data_source_name,omitempty"`
	LaneId              string `protobuf:"bytes,4,opt,name=lane_id,json=laneId,proto3" json:"lane_id,omitempty"` // definisce univocamente detection_point_id
	DetectionType       string `protobuf:"bytes,5,opt,name=detection_type,json=detectionType,proto3" json:"detection_type,omitempty"`
	DetectionTechnology string `protobuf:"bytes,6,opt,name=detection_technology,json=detectionTechnology,proto3" json:"detection_technology,omitempty"` //es spira, sensore above ground
	// data rilevamento
	DetectionTimestamp *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=detection_timestamp,json=detectionTimestamp,proto3" json:"detection_timestamp,omitempty"`
	// dati
	VehicleClass   VehicleClassType `protobuf:"varint,8,opt,name=vehicle_class,json=vehicleClass,proto3,enum=pb.VehicleClassType" json:"vehicle_class,omitempty"`
	VehicleSpeed   float32          `protobuf:"fixed32,9,opt,name=vehicle_speed,json=vehicleSpeed,proto3" json:"vehicle_speed,omitempty"`        // km/h
	VehicleLength  float32          `protobuf:"fixed32,10,opt,name=vehicle_length,json=vehicleLength,proto3" json:"vehicle_length,omitempty"`    //cm
	VehicleHeadway float32          `protobuf:"fixed32,11,opt,name=vehicle_headway,json=vehicleHeadway,proto3" json:"vehicle_headway,omitempty"` //ms rispetto a veicolo precedente
	QueuePresent   bool             `protobuf:"varint,12,opt,name=queue_present,json=queuePresent,proto3" json:"queue_present,omitempty"`        // presenza di coda
	// modalità rilievo
	//
	//	Indicazione esplicita del caso di flusso in controsenso rispetto alla direzione attesa (es.:
	//
	// inversione della direzione di marcia della corsia)
	CorrectFlowDirection bool `protobuf:"varint,13,opt,name=correct_flow_direction,json=correctFlowDirection,proto3" json:"correct_flow_direction,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *RealTimeTrafficDataByDetectionPointByLane) Reset() {
	*x = RealTimeTrafficDataByDetectionPointByLane{}
	mi := &file_dtos_real_time_traffic_data_detection_point_lane_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RealTimeTrafficDataByDetectionPointByLane) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RealTimeTrafficDataByDetectionPointByLane) ProtoMessage() {}

func (x *RealTimeTrafficDataByDetectionPointByLane) ProtoReflect() protoreflect.Message {
	mi := &file_dtos_real_time_traffic_data_detection_point_lane_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RealTimeTrafficDataByDetectionPointByLane.ProtoReflect.Descriptor instead.
func (*RealTimeTrafficDataByDetectionPointByLane) Descriptor() ([]byte, []int) {
	return file_dtos_real_time_traffic_data_detection_point_lane_proto_rawDescGZIP(), []int{0}
}

func (x *RealTimeTrafficDataByDetectionPointByLane) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *RealTimeTrafficDataByDetectionPointByLane) GetModifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ModifiedAt
	}
	return nil
}

func (x *RealTimeTrafficDataByDetectionPointByLane) GetDataSourceName() string {
	if x != nil {
		return x.DataSourceName
	}
	return ""
}

func (x *RealTimeTrafficDataByDetectionPointByLane) GetLaneId() string {
	if x != nil {
		return x.LaneId
	}
	return ""
}

func (x *RealTimeTrafficDataByDetectionPointByLane) GetDetectionType() string {
	if x != nil {
		return x.DetectionType
	}
	return ""
}

func (x *RealTimeTrafficDataByDetectionPointByLane) GetDetectionTechnology() string {
	if x != nil {
		return x.DetectionTechnology
	}
	return ""
}

func (x *RealTimeTrafficDataByDetectionPointByLane) GetDetectionTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.DetectionTimestamp
	}
	return nil
}

func (x *RealTimeTrafficDataByDetectionPointByLane) GetVehicleClass() VehicleClassType {
	if x != nil {
		return x.VehicleClass
	}
	return VehicleClassType_VEHICLE_CLASS_1
}

func (x *RealTimeTrafficDataByDetectionPointByLane) GetVehicleSpeed() float32 {
	if x != nil {
		return x.VehicleSpeed
	}
	return 0
}

func (x *RealTimeTrafficDataByDetectionPointByLane) GetVehicleLength() float32 {
	if x != nil {
		return x.VehicleLength
	}
	return 0
}

func (x *RealTimeTrafficDataByDetectionPointByLane) GetVehicleHeadway() float32 {
	if x != nil {
		return x.VehicleHeadway
	}
	return 0
}

func (x *RealTimeTrafficDataByDetectionPointByLane) GetQueuePresent() bool {
	if x != nil {
		return x.QueuePresent
	}
	return false
}

func (x *RealTimeTrafficDataByDetectionPointByLane) GetCorrectFlowDirection() bool {
	if x != nil {
		return x.CorrectFlowDirection
	}
	return false
}

var File_dtos_real_time_traffic_data_detection_point_lane_proto protoreflect.FileDescriptor

const file_dtos_real_time_traffic_data_detection_point_lane_proto_rawDesc = "" +
	"\n" +
	"6dtos/real_time_traffic_data_detection_point_lane.proto\x12\x02pb\x1a\x1fgoogle/protobuf/timestamp.proto\"\x98\x05\n" +
	")RealTimeTrafficDataByDetectionPointByLane\x129\n" +
	"\n" +
	"created_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12;\n" +
	"\vmodified_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"modifiedAt\x12(\n" +
	"\x10data_source_name\x18\x03 \x01(\tR\x0edataSourceName\x12\x17\n" +
	"\alane_id\x18\x04 \x01(\tR\x06laneId\x12%\n" +
	"\x0edetection_type\x18\x05 \x01(\tR\rdetectionType\x121\n" +
	"\x14detection_technology\x18\x06 \x01(\tR\x13detectionTechnology\x12K\n" +
	"\x13detection_timestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x12detectionTimestamp\x129\n" +
	"\rvehicle_class\x18\b \x01(\x0e2\x14.pb.VehicleClassTypeR\fvehicleClass\x12#\n" +
	"\rvehicle_speed\x18\t \x01(\x02R\fvehicleSpeed\x12%\n" +
	"\x0evehicle_length\x18\n" +
	" \x01(\x02R\rvehicleLength\x12'\n" +
	"\x0fvehicle_headway\x18\v \x01(\x02R\x0evehicleHeadway\x12#\n" +
	"\rqueue_present\x18\f \x01(\bR\fqueuePresent\x124\n" +
	"\x16correct_flow_direction\x18\r \x01(\bR\x14correctFlowDirection*\xd3\x01\n" +
	"\x10VehicleClassType\x12\x13\n" +
	"\x0fVEHICLE_CLASS_1\x10\x00\x12\x13\n" +
	"\x0fVEHICLE_CLASS_2\x10\x01\x12\x13\n" +
	"\x0fVEHICLE_CLASS_3\x10\x02\x12\x13\n" +
	"\x0fVEHICLE_CLASS_4\x10\x03\x12\x13\n" +
	"\x0fVEHICLE_CLASS_5\x10\x04\x12\x13\n" +
	"\x0fVEHICLE_CLASS_6\x10\x05\x12\x13\n" +
	"\x0fVEHICLE_CLASS_7\x10\x06\x12\x13\n" +
	"\x0fVEHICLE_CLASS_8\x10\a\x12\x17\n" +
	"\x13VEHICLE_CLASS_OTHER\x10\bB\x12Z\x10internal/data/pbb\x06proto3"

var (
	file_dtos_real_time_traffic_data_detection_point_lane_proto_rawDescOnce sync.Once
	file_dtos_real_time_traffic_data_detection_point_lane_proto_rawDescData []byte
)

func file_dtos_real_time_traffic_data_detection_point_lane_proto_rawDescGZIP() []byte {
	file_dtos_real_time_traffic_data_detection_point_lane_proto_rawDescOnce.Do(func() {
		file_dtos_real_time_traffic_data_detection_point_lane_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dtos_real_time_traffic_data_detection_point_lane_proto_rawDesc), len(file_dtos_real_time_traffic_data_detection_point_lane_proto_rawDesc)))
	})
	return file_dtos_real_time_traffic_data_detection_point_lane_proto_rawDescData
}

var file_dtos_real_time_traffic_data_detection_point_lane_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_dtos_real_time_traffic_data_detection_point_lane_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_dtos_real_time_traffic_data_detection_point_lane_proto_goTypes = []any{
	(VehicleClassType)(0),                             // 0: pb.VehicleClassType
	(*RealTimeTrafficDataByDetectionPointByLane)(nil), // 1: pb.RealTimeTrafficDataByDetectionPointByLane
	(*timestamppb.Timestamp)(nil),                     // 2: google.protobuf.Timestamp
}
var file_dtos_real_time_traffic_data_detection_point_lane_proto_depIdxs = []int32{
	2, // 0: pb.RealTimeTrafficDataByDetectionPointByLane.created_at:type_name -> google.protobuf.Timestamp
	2, // 1: pb.RealTimeTrafficDataByDetectionPointByLane.modified_at:type_name -> google.protobuf.Timestamp
	2, // 2: pb.RealTimeTrafficDataByDetectionPointByLane.detection_timestamp:type_name -> google.protobuf.Timestamp
	0, // 3: pb.RealTimeTrafficDataByDetectionPointByLane.vehicle_class:type_name -> pb.VehicleClassType
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_dtos_real_time_traffic_data_detection_point_lane_proto_init() }
func file_dtos_real_time_traffic_data_detection_point_lane_proto_init() {
	if File_dtos_real_time_traffic_data_detection_point_lane_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dtos_real_time_traffic_data_detection_point_lane_proto_rawDesc), len(file_dtos_real_time_traffic_data_detection_point_lane_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dtos_real_time_traffic_data_detection_point_lane_proto_goTypes,
		DependencyIndexes: file_dtos_real_time_traffic_data_detection_point_lane_proto_depIdxs,
		EnumInfos:         file_dtos_real_time_traffic_data_detection_point_lane_proto_enumTypes,
		MessageInfos:      file_dtos_real_time_traffic_data_detection_point_lane_proto_msgTypes,
	}.Build()
	File_dtos_real_time_traffic_data_detection_point_lane_proto = out.File
	file_dtos_real_time_traffic_data_detection_point_lane_proto_goTypes = nil
	file_dtos_real_time_traffic_data_detection_point_lane_proto_depIdxs = nil
}
