// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v6.30.1
// source: services/history_day_traffic_data_detection_section.service.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	HistoryDayTrafficDataByDetectionSectionService_ListHistoryDayTrafficDataByDetectionSection_FullMethodName          = "/pb.HistoryDayTrafficDataByDetectionSectionService/ListHistoryDayTrafficDataByDetectionSection"
	HistoryDayTrafficDataByDetectionSectionService_GetHistoryDayTrafficDataByDetectionSection_FullMethodName           = "/pb.HistoryDayTrafficDataByDetectionSectionService/GetHistoryDayTrafficDataByDetectionSection"
	HistoryDayTrafficDataByDetectionSectionService_CreateHistoryDayTrafficDataByDetectionSection_FullMethodName        = "/pb.HistoryDayTrafficDataByDetectionSectionService/CreateHistoryDayTrafficDataByDetectionSection"
	HistoryDayTrafficDataByDetectionSectionService_UpdateHistoryDayTrafficDataByDetectionSection_FullMethodName        = "/pb.HistoryDayTrafficDataByDetectionSectionService/UpdateHistoryDayTrafficDataByDetectionSection"
	HistoryDayTrafficDataByDetectionSectionService_DeleteHistoryDayTrafficDataByDetectionSection_FullMethodName        = "/pb.HistoryDayTrafficDataByDetectionSectionService/DeleteHistoryDayTrafficDataByDetectionSection"
	HistoryDayTrafficDataByDetectionSectionService_BulkCreateHistoryDayTrafficDataByDetectionSection_FullMethodName    = "/pb.HistoryDayTrafficDataByDetectionSectionService/BulkCreateHistoryDayTrafficDataByDetectionSection"
	HistoryDayTrafficDataByDetectionSectionService_GetHistoryDayTrafficDataByDetectionSectionStatistics_FullMethodName = "/pb.HistoryDayTrafficDataByDetectionSectionService/GetHistoryDayTrafficDataByDetectionSectionStatistics"
	HistoryDayTrafficDataByDetectionSectionService_ListHistoryDayTrafficDataByDetectionSectionDaily_FullMethodName     = "/pb.HistoryDayTrafficDataByDetectionSectionService/ListHistoryDayTrafficDataByDetectionSectionDaily"
	HistoryDayTrafficDataByDetectionSectionService_DownloadHistoryDayTrafficDataByDetectionSection_FullMethodName      = "/pb.HistoryDayTrafficDataByDetectionSectionService/DownloadHistoryDayTrafficDataByDetectionSection"
)

// HistoryDayTrafficDataByDetectionSectionServiceClient is the client API for HistoryDayTrafficDataByDetectionSectionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type HistoryDayTrafficDataByDetectionSectionServiceClient interface {
	ListHistoryDayTrafficDataByDetectionSection(ctx context.Context, in *ListTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*ListHistoryDayTrafficDataByDetectionSectionResponse, error)
	GetHistoryDayTrafficDataByDetectionSection(ctx context.Context, in *GetTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*GetHistoryDayTrafficDataByDetectionSectionResponse, error)
	CreateHistoryDayTrafficDataByDetectionSection(ctx context.Context, in *CreateHistoryDayTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*CreateHistoryDayTrafficDataByDetectionSectionResponse, error)
	UpdateHistoryDayTrafficDataByDetectionSection(ctx context.Context, in *UpdateHistoryDayTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*UpdateHistoryDayTrafficDataByDetectionSectionResponse, error)
	DeleteHistoryDayTrafficDataByDetectionSection(ctx context.Context, in *DeleteTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	BulkCreateHistoryDayTrafficDataByDetectionSection(ctx context.Context, in *BulkCreateTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*BulkCreateTrafficDataByDetectionSectionResponse, error)
	GetHistoryDayTrafficDataByDetectionSectionStatistics(ctx context.Context, in *GetTrafficDataByDetectionSectionStatisticsRequest, opts ...grpc.CallOption) (*GetTrafficDataByDetectionSectionStatisticsResponse, error)
	ListHistoryDayTrafficDataByDetectionSectionDaily(ctx context.Context, in *ListTrafficDataByDetectionSectionDailyRequest, opts ...grpc.CallOption) (*ListHistoryDayTrafficDataByDetectionSectionDailyResponse, error)
	DownloadHistoryDayTrafficDataByDetectionSection(ctx context.Context, in *DownloadTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*DownloadResponse, error)
}

type historyDayTrafficDataByDetectionSectionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHistoryDayTrafficDataByDetectionSectionServiceClient(cc grpc.ClientConnInterface) HistoryDayTrafficDataByDetectionSectionServiceClient {
	return &historyDayTrafficDataByDetectionSectionServiceClient{cc}
}

func (c *historyDayTrafficDataByDetectionSectionServiceClient) ListHistoryDayTrafficDataByDetectionSection(ctx context.Context, in *ListTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*ListHistoryDayTrafficDataByDetectionSectionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListHistoryDayTrafficDataByDetectionSectionResponse)
	err := c.cc.Invoke(ctx, HistoryDayTrafficDataByDetectionSectionService_ListHistoryDayTrafficDataByDetectionSection_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *historyDayTrafficDataByDetectionSectionServiceClient) GetHistoryDayTrafficDataByDetectionSection(ctx context.Context, in *GetTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*GetHistoryDayTrafficDataByDetectionSectionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetHistoryDayTrafficDataByDetectionSectionResponse)
	err := c.cc.Invoke(ctx, HistoryDayTrafficDataByDetectionSectionService_GetHistoryDayTrafficDataByDetectionSection_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *historyDayTrafficDataByDetectionSectionServiceClient) CreateHistoryDayTrafficDataByDetectionSection(ctx context.Context, in *CreateHistoryDayTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*CreateHistoryDayTrafficDataByDetectionSectionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateHistoryDayTrafficDataByDetectionSectionResponse)
	err := c.cc.Invoke(ctx, HistoryDayTrafficDataByDetectionSectionService_CreateHistoryDayTrafficDataByDetectionSection_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *historyDayTrafficDataByDetectionSectionServiceClient) UpdateHistoryDayTrafficDataByDetectionSection(ctx context.Context, in *UpdateHistoryDayTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*UpdateHistoryDayTrafficDataByDetectionSectionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateHistoryDayTrafficDataByDetectionSectionResponse)
	err := c.cc.Invoke(ctx, HistoryDayTrafficDataByDetectionSectionService_UpdateHistoryDayTrafficDataByDetectionSection_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *historyDayTrafficDataByDetectionSectionServiceClient) DeleteHistoryDayTrafficDataByDetectionSection(ctx context.Context, in *DeleteTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, HistoryDayTrafficDataByDetectionSectionService_DeleteHistoryDayTrafficDataByDetectionSection_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *historyDayTrafficDataByDetectionSectionServiceClient) BulkCreateHistoryDayTrafficDataByDetectionSection(ctx context.Context, in *BulkCreateTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*BulkCreateTrafficDataByDetectionSectionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(BulkCreateTrafficDataByDetectionSectionResponse)
	err := c.cc.Invoke(ctx, HistoryDayTrafficDataByDetectionSectionService_BulkCreateHistoryDayTrafficDataByDetectionSection_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *historyDayTrafficDataByDetectionSectionServiceClient) GetHistoryDayTrafficDataByDetectionSectionStatistics(ctx context.Context, in *GetTrafficDataByDetectionSectionStatisticsRequest, opts ...grpc.CallOption) (*GetTrafficDataByDetectionSectionStatisticsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetTrafficDataByDetectionSectionStatisticsResponse)
	err := c.cc.Invoke(ctx, HistoryDayTrafficDataByDetectionSectionService_GetHistoryDayTrafficDataByDetectionSectionStatistics_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *historyDayTrafficDataByDetectionSectionServiceClient) ListHistoryDayTrafficDataByDetectionSectionDaily(ctx context.Context, in *ListTrafficDataByDetectionSectionDailyRequest, opts ...grpc.CallOption) (*ListHistoryDayTrafficDataByDetectionSectionDailyResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListHistoryDayTrafficDataByDetectionSectionDailyResponse)
	err := c.cc.Invoke(ctx, HistoryDayTrafficDataByDetectionSectionService_ListHistoryDayTrafficDataByDetectionSectionDaily_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *historyDayTrafficDataByDetectionSectionServiceClient) DownloadHistoryDayTrafficDataByDetectionSection(ctx context.Context, in *DownloadTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*DownloadResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DownloadResponse)
	err := c.cc.Invoke(ctx, HistoryDayTrafficDataByDetectionSectionService_DownloadHistoryDayTrafficDataByDetectionSection_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HistoryDayTrafficDataByDetectionSectionServiceServer is the server API for HistoryDayTrafficDataByDetectionSectionService service.
// All implementations must embed UnimplementedHistoryDayTrafficDataByDetectionSectionServiceServer
// for forward compatibility.
type HistoryDayTrafficDataByDetectionSectionServiceServer interface {
	ListHistoryDayTrafficDataByDetectionSection(context.Context, *ListTrafficDataByDetectionSectionRequest) (*ListHistoryDayTrafficDataByDetectionSectionResponse, error)
	GetHistoryDayTrafficDataByDetectionSection(context.Context, *GetTrafficDataByDetectionSectionRequest) (*GetHistoryDayTrafficDataByDetectionSectionResponse, error)
	CreateHistoryDayTrafficDataByDetectionSection(context.Context, *CreateHistoryDayTrafficDataByDetectionSectionRequest) (*CreateHistoryDayTrafficDataByDetectionSectionResponse, error)
	UpdateHistoryDayTrafficDataByDetectionSection(context.Context, *UpdateHistoryDayTrafficDataByDetectionSectionRequest) (*UpdateHistoryDayTrafficDataByDetectionSectionResponse, error)
	DeleteHistoryDayTrafficDataByDetectionSection(context.Context, *DeleteTrafficDataByDetectionSectionRequest) (*emptypb.Empty, error)
	BulkCreateHistoryDayTrafficDataByDetectionSection(context.Context, *BulkCreateTrafficDataByDetectionSectionRequest) (*BulkCreateTrafficDataByDetectionSectionResponse, error)
	GetHistoryDayTrafficDataByDetectionSectionStatistics(context.Context, *GetTrafficDataByDetectionSectionStatisticsRequest) (*GetTrafficDataByDetectionSectionStatisticsResponse, error)
	ListHistoryDayTrafficDataByDetectionSectionDaily(context.Context, *ListTrafficDataByDetectionSectionDailyRequest) (*ListHistoryDayTrafficDataByDetectionSectionDailyResponse, error)
	DownloadHistoryDayTrafficDataByDetectionSection(context.Context, *DownloadTrafficDataByDetectionSectionRequest) (*DownloadResponse, error)
	mustEmbedUnimplementedHistoryDayTrafficDataByDetectionSectionServiceServer()
}

// UnimplementedHistoryDayTrafficDataByDetectionSectionServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedHistoryDayTrafficDataByDetectionSectionServiceServer struct{}

func (UnimplementedHistoryDayTrafficDataByDetectionSectionServiceServer) ListHistoryDayTrafficDataByDetectionSection(context.Context, *ListTrafficDataByDetectionSectionRequest) (*ListHistoryDayTrafficDataByDetectionSectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListHistoryDayTrafficDataByDetectionSection not implemented")
}
func (UnimplementedHistoryDayTrafficDataByDetectionSectionServiceServer) GetHistoryDayTrafficDataByDetectionSection(context.Context, *GetTrafficDataByDetectionSectionRequest) (*GetHistoryDayTrafficDataByDetectionSectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHistoryDayTrafficDataByDetectionSection not implemented")
}
func (UnimplementedHistoryDayTrafficDataByDetectionSectionServiceServer) CreateHistoryDayTrafficDataByDetectionSection(context.Context, *CreateHistoryDayTrafficDataByDetectionSectionRequest) (*CreateHistoryDayTrafficDataByDetectionSectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateHistoryDayTrafficDataByDetectionSection not implemented")
}
func (UnimplementedHistoryDayTrafficDataByDetectionSectionServiceServer) UpdateHistoryDayTrafficDataByDetectionSection(context.Context, *UpdateHistoryDayTrafficDataByDetectionSectionRequest) (*UpdateHistoryDayTrafficDataByDetectionSectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateHistoryDayTrafficDataByDetectionSection not implemented")
}
func (UnimplementedHistoryDayTrafficDataByDetectionSectionServiceServer) DeleteHistoryDayTrafficDataByDetectionSection(context.Context, *DeleteTrafficDataByDetectionSectionRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteHistoryDayTrafficDataByDetectionSection not implemented")
}
func (UnimplementedHistoryDayTrafficDataByDetectionSectionServiceServer) BulkCreateHistoryDayTrafficDataByDetectionSection(context.Context, *BulkCreateTrafficDataByDetectionSectionRequest) (*BulkCreateTrafficDataByDetectionSectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BulkCreateHistoryDayTrafficDataByDetectionSection not implemented")
}
func (UnimplementedHistoryDayTrafficDataByDetectionSectionServiceServer) GetHistoryDayTrafficDataByDetectionSectionStatistics(context.Context, *GetTrafficDataByDetectionSectionStatisticsRequest) (*GetTrafficDataByDetectionSectionStatisticsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHistoryDayTrafficDataByDetectionSectionStatistics not implemented")
}
func (UnimplementedHistoryDayTrafficDataByDetectionSectionServiceServer) ListHistoryDayTrafficDataByDetectionSectionDaily(context.Context, *ListTrafficDataByDetectionSectionDailyRequest) (*ListHistoryDayTrafficDataByDetectionSectionDailyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListHistoryDayTrafficDataByDetectionSectionDaily not implemented")
}
func (UnimplementedHistoryDayTrafficDataByDetectionSectionServiceServer) DownloadHistoryDayTrafficDataByDetectionSection(context.Context, *DownloadTrafficDataByDetectionSectionRequest) (*DownloadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DownloadHistoryDayTrafficDataByDetectionSection not implemented")
}
func (UnimplementedHistoryDayTrafficDataByDetectionSectionServiceServer) mustEmbedUnimplementedHistoryDayTrafficDataByDetectionSectionServiceServer() {
}
func (UnimplementedHistoryDayTrafficDataByDetectionSectionServiceServer) testEmbeddedByValue() {}

// UnsafeHistoryDayTrafficDataByDetectionSectionServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to HistoryDayTrafficDataByDetectionSectionServiceServer will
// result in compilation errors.
type UnsafeHistoryDayTrafficDataByDetectionSectionServiceServer interface {
	mustEmbedUnimplementedHistoryDayTrafficDataByDetectionSectionServiceServer()
}

func RegisterHistoryDayTrafficDataByDetectionSectionServiceServer(s grpc.ServiceRegistrar, srv HistoryDayTrafficDataByDetectionSectionServiceServer) {
	// If the following call pancis, it indicates UnimplementedHistoryDayTrafficDataByDetectionSectionServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&HistoryDayTrafficDataByDetectionSectionService_ServiceDesc, srv)
}

func _HistoryDayTrafficDataByDetectionSectionService_ListHistoryDayTrafficDataByDetectionSection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTrafficDataByDetectionSectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryDayTrafficDataByDetectionSectionServiceServer).ListHistoryDayTrafficDataByDetectionSection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HistoryDayTrafficDataByDetectionSectionService_ListHistoryDayTrafficDataByDetectionSection_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryDayTrafficDataByDetectionSectionServiceServer).ListHistoryDayTrafficDataByDetectionSection(ctx, req.(*ListTrafficDataByDetectionSectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HistoryDayTrafficDataByDetectionSectionService_GetHistoryDayTrafficDataByDetectionSection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTrafficDataByDetectionSectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryDayTrafficDataByDetectionSectionServiceServer).GetHistoryDayTrafficDataByDetectionSection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HistoryDayTrafficDataByDetectionSectionService_GetHistoryDayTrafficDataByDetectionSection_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryDayTrafficDataByDetectionSectionServiceServer).GetHistoryDayTrafficDataByDetectionSection(ctx, req.(*GetTrafficDataByDetectionSectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HistoryDayTrafficDataByDetectionSectionService_CreateHistoryDayTrafficDataByDetectionSection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateHistoryDayTrafficDataByDetectionSectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryDayTrafficDataByDetectionSectionServiceServer).CreateHistoryDayTrafficDataByDetectionSection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HistoryDayTrafficDataByDetectionSectionService_CreateHistoryDayTrafficDataByDetectionSection_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryDayTrafficDataByDetectionSectionServiceServer).CreateHistoryDayTrafficDataByDetectionSection(ctx, req.(*CreateHistoryDayTrafficDataByDetectionSectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HistoryDayTrafficDataByDetectionSectionService_UpdateHistoryDayTrafficDataByDetectionSection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateHistoryDayTrafficDataByDetectionSectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryDayTrafficDataByDetectionSectionServiceServer).UpdateHistoryDayTrafficDataByDetectionSection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HistoryDayTrafficDataByDetectionSectionService_UpdateHistoryDayTrafficDataByDetectionSection_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryDayTrafficDataByDetectionSectionServiceServer).UpdateHistoryDayTrafficDataByDetectionSection(ctx, req.(*UpdateHistoryDayTrafficDataByDetectionSectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HistoryDayTrafficDataByDetectionSectionService_DeleteHistoryDayTrafficDataByDetectionSection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTrafficDataByDetectionSectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryDayTrafficDataByDetectionSectionServiceServer).DeleteHistoryDayTrafficDataByDetectionSection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HistoryDayTrafficDataByDetectionSectionService_DeleteHistoryDayTrafficDataByDetectionSection_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryDayTrafficDataByDetectionSectionServiceServer).DeleteHistoryDayTrafficDataByDetectionSection(ctx, req.(*DeleteTrafficDataByDetectionSectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HistoryDayTrafficDataByDetectionSectionService_BulkCreateHistoryDayTrafficDataByDetectionSection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BulkCreateTrafficDataByDetectionSectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryDayTrafficDataByDetectionSectionServiceServer).BulkCreateHistoryDayTrafficDataByDetectionSection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HistoryDayTrafficDataByDetectionSectionService_BulkCreateHistoryDayTrafficDataByDetectionSection_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryDayTrafficDataByDetectionSectionServiceServer).BulkCreateHistoryDayTrafficDataByDetectionSection(ctx, req.(*BulkCreateTrafficDataByDetectionSectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HistoryDayTrafficDataByDetectionSectionService_GetHistoryDayTrafficDataByDetectionSectionStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTrafficDataByDetectionSectionStatisticsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryDayTrafficDataByDetectionSectionServiceServer).GetHistoryDayTrafficDataByDetectionSectionStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HistoryDayTrafficDataByDetectionSectionService_GetHistoryDayTrafficDataByDetectionSectionStatistics_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryDayTrafficDataByDetectionSectionServiceServer).GetHistoryDayTrafficDataByDetectionSectionStatistics(ctx, req.(*GetTrafficDataByDetectionSectionStatisticsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HistoryDayTrafficDataByDetectionSectionService_ListHistoryDayTrafficDataByDetectionSectionDaily_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTrafficDataByDetectionSectionDailyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryDayTrafficDataByDetectionSectionServiceServer).ListHistoryDayTrafficDataByDetectionSectionDaily(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HistoryDayTrafficDataByDetectionSectionService_ListHistoryDayTrafficDataByDetectionSectionDaily_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryDayTrafficDataByDetectionSectionServiceServer).ListHistoryDayTrafficDataByDetectionSectionDaily(ctx, req.(*ListTrafficDataByDetectionSectionDailyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HistoryDayTrafficDataByDetectionSectionService_DownloadHistoryDayTrafficDataByDetectionSection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadTrafficDataByDetectionSectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryDayTrafficDataByDetectionSectionServiceServer).DownloadHistoryDayTrafficDataByDetectionSection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HistoryDayTrafficDataByDetectionSectionService_DownloadHistoryDayTrafficDataByDetectionSection_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryDayTrafficDataByDetectionSectionServiceServer).DownloadHistoryDayTrafficDataByDetectionSection(ctx, req.(*DownloadTrafficDataByDetectionSectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// HistoryDayTrafficDataByDetectionSectionService_ServiceDesc is the grpc.ServiceDesc for HistoryDayTrafficDataByDetectionSectionService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var HistoryDayTrafficDataByDetectionSectionService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.HistoryDayTrafficDataByDetectionSectionService",
	HandlerType: (*HistoryDayTrafficDataByDetectionSectionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListHistoryDayTrafficDataByDetectionSection",
			Handler:    _HistoryDayTrafficDataByDetectionSectionService_ListHistoryDayTrafficDataByDetectionSection_Handler,
		},
		{
			MethodName: "GetHistoryDayTrafficDataByDetectionSection",
			Handler:    _HistoryDayTrafficDataByDetectionSectionService_GetHistoryDayTrafficDataByDetectionSection_Handler,
		},
		{
			MethodName: "CreateHistoryDayTrafficDataByDetectionSection",
			Handler:    _HistoryDayTrafficDataByDetectionSectionService_CreateHistoryDayTrafficDataByDetectionSection_Handler,
		},
		{
			MethodName: "UpdateHistoryDayTrafficDataByDetectionSection",
			Handler:    _HistoryDayTrafficDataByDetectionSectionService_UpdateHistoryDayTrafficDataByDetectionSection_Handler,
		},
		{
			MethodName: "DeleteHistoryDayTrafficDataByDetectionSection",
			Handler:    _HistoryDayTrafficDataByDetectionSectionService_DeleteHistoryDayTrafficDataByDetectionSection_Handler,
		},
		{
			MethodName: "BulkCreateHistoryDayTrafficDataByDetectionSection",
			Handler:    _HistoryDayTrafficDataByDetectionSectionService_BulkCreateHistoryDayTrafficDataByDetectionSection_Handler,
		},
		{
			MethodName: "GetHistoryDayTrafficDataByDetectionSectionStatistics",
			Handler:    _HistoryDayTrafficDataByDetectionSectionService_GetHistoryDayTrafficDataByDetectionSectionStatistics_Handler,
		},
		{
			MethodName: "ListHistoryDayTrafficDataByDetectionSectionDaily",
			Handler:    _HistoryDayTrafficDataByDetectionSectionService_ListHistoryDayTrafficDataByDetectionSectionDaily_Handler,
		},
		{
			MethodName: "DownloadHistoryDayTrafficDataByDetectionSection",
			Handler:    _HistoryDayTrafficDataByDetectionSectionService_DownloadHistoryDayTrafficDataByDetectionSection_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/history_day_traffic_data_detection_section.service.proto",
}
