// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v6.30.1
// source: services/history_day_traffic_data_detection_point.service.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	HistoryDayTrafficDataByDetectionPointService_ListHistoryDayTrafficDataByDetectionPoint_FullMethodName          = "/pb.HistoryDayTrafficDataByDetectionPointService/ListHistoryDayTrafficDataByDetectionPoint"
	HistoryDayTrafficDataByDetectionPointService_GetHistoryDayTrafficDataByDetectionPoint_FullMethodName           = "/pb.HistoryDayTrafficDataByDetectionPointService/GetHistoryDayTrafficDataByDetectionPoint"
	HistoryDayTrafficDataByDetectionPointService_CreateHistoryDayTrafficDataByDetectionPoint_FullMethodName        = "/pb.HistoryDayTrafficDataByDetectionPointService/CreateHistoryDayTrafficDataByDetectionPoint"
	HistoryDayTrafficDataByDetectionPointService_UpdateHistoryDayTrafficDataByDetectionPoint_FullMethodName        = "/pb.HistoryDayTrafficDataByDetectionPointService/UpdateHistoryDayTrafficDataByDetectionPoint"
	HistoryDayTrafficDataByDetectionPointService_DeleteHistoryDayTrafficDataByDetectionPoint_FullMethodName        = "/pb.HistoryDayTrafficDataByDetectionPointService/DeleteHistoryDayTrafficDataByDetectionPoint"
	HistoryDayTrafficDataByDetectionPointService_BulkCreateHistoryDayTrafficDataByDetectionPoint_FullMethodName    = "/pb.HistoryDayTrafficDataByDetectionPointService/BulkCreateHistoryDayTrafficDataByDetectionPoint"
	HistoryDayTrafficDataByDetectionPointService_GetHistoryDayTrafficDataByDetectionPointStatistics_FullMethodName = "/pb.HistoryDayTrafficDataByDetectionPointService/GetHistoryDayTrafficDataByDetectionPointStatistics"
	HistoryDayTrafficDataByDetectionPointService_ListHistoryDayTrafficDataByDetectionPointDaily_FullMethodName     = "/pb.HistoryDayTrafficDataByDetectionPointService/ListHistoryDayTrafficDataByDetectionPointDaily"
	HistoryDayTrafficDataByDetectionPointService_DownloadHistoryDayTrafficDataByDetectionPoint_FullMethodName      = "/pb.HistoryDayTrafficDataByDetectionPointService/DownloadHistoryDayTrafficDataByDetectionPoint"
)

// HistoryDayTrafficDataByDetectionPointServiceClient is the client API for HistoryDayTrafficDataByDetectionPointService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type HistoryDayTrafficDataByDetectionPointServiceClient interface {
	ListHistoryDayTrafficDataByDetectionPoint(ctx context.Context, in *ListTrafficDataByDetectionPointRequest, opts ...grpc.CallOption) (*ListHistoryDayTrafficDataByDetectionPointResponse, error)
	GetHistoryDayTrafficDataByDetectionPoint(ctx context.Context, in *GetTrafficDataByDetectionPointRequest, opts ...grpc.CallOption) (*GetHistoryDayTrafficDataByDetectionPointResponse, error)
	CreateHistoryDayTrafficDataByDetectionPoint(ctx context.Context, in *CreateHistoryDayTrafficDataByDetectionPointRequest, opts ...grpc.CallOption) (*CreateHistoryDayTrafficDataByDetectionPointResponse, error)
	UpdateHistoryDayTrafficDataByDetectionPoint(ctx context.Context, in *UpdateHistoryDayTrafficDataByDetectionPointRequest, opts ...grpc.CallOption) (*UpdateHistoryDayTrafficDataByDetectionPointResponse, error)
	DeleteHistoryDayTrafficDataByDetectionPoint(ctx context.Context, in *DeleteTrafficDataByDetectionPointRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	BulkCreateHistoryDayTrafficDataByDetectionPoint(ctx context.Context, in *BulkCreateTrafficDataByDetectionPointRequest, opts ...grpc.CallOption) (*BulkCreateTrafficDataByDetectionPointResponse, error)
	GetHistoryDayTrafficDataByDetectionPointStatistics(ctx context.Context, in *GetTrafficDataByDetectionPointStatisticsRequest, opts ...grpc.CallOption) (*GetTrafficDataByDetectionPointStatisticsResponse, error)
	ListHistoryDayTrafficDataByDetectionPointDaily(ctx context.Context, in *ListTrafficDataByDetectionPointDailyRequest, opts ...grpc.CallOption) (*ListHistoryDayTrafficDataByDetectionPointDailyResponse, error)
	DownloadHistoryDayTrafficDataByDetectionPoint(ctx context.Context, in *DownloadTrafficDataByDetectionPointRequest, opts ...grpc.CallOption) (*DownloadResponse, error)
}

type historyDayTrafficDataByDetectionPointServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHistoryDayTrafficDataByDetectionPointServiceClient(cc grpc.ClientConnInterface) HistoryDayTrafficDataByDetectionPointServiceClient {
	return &historyDayTrafficDataByDetectionPointServiceClient{cc}
}

func (c *historyDayTrafficDataByDetectionPointServiceClient) ListHistoryDayTrafficDataByDetectionPoint(ctx context.Context, in *ListTrafficDataByDetectionPointRequest, opts ...grpc.CallOption) (*ListHistoryDayTrafficDataByDetectionPointResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListHistoryDayTrafficDataByDetectionPointResponse)
	err := c.cc.Invoke(ctx, HistoryDayTrafficDataByDetectionPointService_ListHistoryDayTrafficDataByDetectionPoint_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *historyDayTrafficDataByDetectionPointServiceClient) GetHistoryDayTrafficDataByDetectionPoint(ctx context.Context, in *GetTrafficDataByDetectionPointRequest, opts ...grpc.CallOption) (*GetHistoryDayTrafficDataByDetectionPointResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetHistoryDayTrafficDataByDetectionPointResponse)
	err := c.cc.Invoke(ctx, HistoryDayTrafficDataByDetectionPointService_GetHistoryDayTrafficDataByDetectionPoint_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *historyDayTrafficDataByDetectionPointServiceClient) CreateHistoryDayTrafficDataByDetectionPoint(ctx context.Context, in *CreateHistoryDayTrafficDataByDetectionPointRequest, opts ...grpc.CallOption) (*CreateHistoryDayTrafficDataByDetectionPointResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateHistoryDayTrafficDataByDetectionPointResponse)
	err := c.cc.Invoke(ctx, HistoryDayTrafficDataByDetectionPointService_CreateHistoryDayTrafficDataByDetectionPoint_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *historyDayTrafficDataByDetectionPointServiceClient) UpdateHistoryDayTrafficDataByDetectionPoint(ctx context.Context, in *UpdateHistoryDayTrafficDataByDetectionPointRequest, opts ...grpc.CallOption) (*UpdateHistoryDayTrafficDataByDetectionPointResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateHistoryDayTrafficDataByDetectionPointResponse)
	err := c.cc.Invoke(ctx, HistoryDayTrafficDataByDetectionPointService_UpdateHistoryDayTrafficDataByDetectionPoint_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *historyDayTrafficDataByDetectionPointServiceClient) DeleteHistoryDayTrafficDataByDetectionPoint(ctx context.Context, in *DeleteTrafficDataByDetectionPointRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, HistoryDayTrafficDataByDetectionPointService_DeleteHistoryDayTrafficDataByDetectionPoint_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *historyDayTrafficDataByDetectionPointServiceClient) BulkCreateHistoryDayTrafficDataByDetectionPoint(ctx context.Context, in *BulkCreateTrafficDataByDetectionPointRequest, opts ...grpc.CallOption) (*BulkCreateTrafficDataByDetectionPointResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(BulkCreateTrafficDataByDetectionPointResponse)
	err := c.cc.Invoke(ctx, HistoryDayTrafficDataByDetectionPointService_BulkCreateHistoryDayTrafficDataByDetectionPoint_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *historyDayTrafficDataByDetectionPointServiceClient) GetHistoryDayTrafficDataByDetectionPointStatistics(ctx context.Context, in *GetTrafficDataByDetectionPointStatisticsRequest, opts ...grpc.CallOption) (*GetTrafficDataByDetectionPointStatisticsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetTrafficDataByDetectionPointStatisticsResponse)
	err := c.cc.Invoke(ctx, HistoryDayTrafficDataByDetectionPointService_GetHistoryDayTrafficDataByDetectionPointStatistics_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *historyDayTrafficDataByDetectionPointServiceClient) ListHistoryDayTrafficDataByDetectionPointDaily(ctx context.Context, in *ListTrafficDataByDetectionPointDailyRequest, opts ...grpc.CallOption) (*ListHistoryDayTrafficDataByDetectionPointDailyResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListHistoryDayTrafficDataByDetectionPointDailyResponse)
	err := c.cc.Invoke(ctx, HistoryDayTrafficDataByDetectionPointService_ListHistoryDayTrafficDataByDetectionPointDaily_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *historyDayTrafficDataByDetectionPointServiceClient) DownloadHistoryDayTrafficDataByDetectionPoint(ctx context.Context, in *DownloadTrafficDataByDetectionPointRequest, opts ...grpc.CallOption) (*DownloadResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DownloadResponse)
	err := c.cc.Invoke(ctx, HistoryDayTrafficDataByDetectionPointService_DownloadHistoryDayTrafficDataByDetectionPoint_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HistoryDayTrafficDataByDetectionPointServiceServer is the server API for HistoryDayTrafficDataByDetectionPointService service.
// All implementations must embed UnimplementedHistoryDayTrafficDataByDetectionPointServiceServer
// for forward compatibility.
type HistoryDayTrafficDataByDetectionPointServiceServer interface {
	ListHistoryDayTrafficDataByDetectionPoint(context.Context, *ListTrafficDataByDetectionPointRequest) (*ListHistoryDayTrafficDataByDetectionPointResponse, error)
	GetHistoryDayTrafficDataByDetectionPoint(context.Context, *GetTrafficDataByDetectionPointRequest) (*GetHistoryDayTrafficDataByDetectionPointResponse, error)
	CreateHistoryDayTrafficDataByDetectionPoint(context.Context, *CreateHistoryDayTrafficDataByDetectionPointRequest) (*CreateHistoryDayTrafficDataByDetectionPointResponse, error)
	UpdateHistoryDayTrafficDataByDetectionPoint(context.Context, *UpdateHistoryDayTrafficDataByDetectionPointRequest) (*UpdateHistoryDayTrafficDataByDetectionPointResponse, error)
	DeleteHistoryDayTrafficDataByDetectionPoint(context.Context, *DeleteTrafficDataByDetectionPointRequest) (*emptypb.Empty, error)
	BulkCreateHistoryDayTrafficDataByDetectionPoint(context.Context, *BulkCreateTrafficDataByDetectionPointRequest) (*BulkCreateTrafficDataByDetectionPointResponse, error)
	GetHistoryDayTrafficDataByDetectionPointStatistics(context.Context, *GetTrafficDataByDetectionPointStatisticsRequest) (*GetTrafficDataByDetectionPointStatisticsResponse, error)
	ListHistoryDayTrafficDataByDetectionPointDaily(context.Context, *ListTrafficDataByDetectionPointDailyRequest) (*ListHistoryDayTrafficDataByDetectionPointDailyResponse, error)
	DownloadHistoryDayTrafficDataByDetectionPoint(context.Context, *DownloadTrafficDataByDetectionPointRequest) (*DownloadResponse, error)
	mustEmbedUnimplementedHistoryDayTrafficDataByDetectionPointServiceServer()
}

// UnimplementedHistoryDayTrafficDataByDetectionPointServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedHistoryDayTrafficDataByDetectionPointServiceServer struct{}

func (UnimplementedHistoryDayTrafficDataByDetectionPointServiceServer) ListHistoryDayTrafficDataByDetectionPoint(context.Context, *ListTrafficDataByDetectionPointRequest) (*ListHistoryDayTrafficDataByDetectionPointResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListHistoryDayTrafficDataByDetectionPoint not implemented")
}
func (UnimplementedHistoryDayTrafficDataByDetectionPointServiceServer) GetHistoryDayTrafficDataByDetectionPoint(context.Context, *GetTrafficDataByDetectionPointRequest) (*GetHistoryDayTrafficDataByDetectionPointResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHistoryDayTrafficDataByDetectionPoint not implemented")
}
func (UnimplementedHistoryDayTrafficDataByDetectionPointServiceServer) CreateHistoryDayTrafficDataByDetectionPoint(context.Context, *CreateHistoryDayTrafficDataByDetectionPointRequest) (*CreateHistoryDayTrafficDataByDetectionPointResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateHistoryDayTrafficDataByDetectionPoint not implemented")
}
func (UnimplementedHistoryDayTrafficDataByDetectionPointServiceServer) UpdateHistoryDayTrafficDataByDetectionPoint(context.Context, *UpdateHistoryDayTrafficDataByDetectionPointRequest) (*UpdateHistoryDayTrafficDataByDetectionPointResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateHistoryDayTrafficDataByDetectionPoint not implemented")
}
func (UnimplementedHistoryDayTrafficDataByDetectionPointServiceServer) DeleteHistoryDayTrafficDataByDetectionPoint(context.Context, *DeleteTrafficDataByDetectionPointRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteHistoryDayTrafficDataByDetectionPoint not implemented")
}
func (UnimplementedHistoryDayTrafficDataByDetectionPointServiceServer) BulkCreateHistoryDayTrafficDataByDetectionPoint(context.Context, *BulkCreateTrafficDataByDetectionPointRequest) (*BulkCreateTrafficDataByDetectionPointResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BulkCreateHistoryDayTrafficDataByDetectionPoint not implemented")
}
func (UnimplementedHistoryDayTrafficDataByDetectionPointServiceServer) GetHistoryDayTrafficDataByDetectionPointStatistics(context.Context, *GetTrafficDataByDetectionPointStatisticsRequest) (*GetTrafficDataByDetectionPointStatisticsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHistoryDayTrafficDataByDetectionPointStatistics not implemented")
}
func (UnimplementedHistoryDayTrafficDataByDetectionPointServiceServer) ListHistoryDayTrafficDataByDetectionPointDaily(context.Context, *ListTrafficDataByDetectionPointDailyRequest) (*ListHistoryDayTrafficDataByDetectionPointDailyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListHistoryDayTrafficDataByDetectionPointDaily not implemented")
}
func (UnimplementedHistoryDayTrafficDataByDetectionPointServiceServer) DownloadHistoryDayTrafficDataByDetectionPoint(context.Context, *DownloadTrafficDataByDetectionPointRequest) (*DownloadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DownloadHistoryDayTrafficDataByDetectionPoint not implemented")
}
func (UnimplementedHistoryDayTrafficDataByDetectionPointServiceServer) mustEmbedUnimplementedHistoryDayTrafficDataByDetectionPointServiceServer() {
}
func (UnimplementedHistoryDayTrafficDataByDetectionPointServiceServer) testEmbeddedByValue() {}

// UnsafeHistoryDayTrafficDataByDetectionPointServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to HistoryDayTrafficDataByDetectionPointServiceServer will
// result in compilation errors.
type UnsafeHistoryDayTrafficDataByDetectionPointServiceServer interface {
	mustEmbedUnimplementedHistoryDayTrafficDataByDetectionPointServiceServer()
}

func RegisterHistoryDayTrafficDataByDetectionPointServiceServer(s grpc.ServiceRegistrar, srv HistoryDayTrafficDataByDetectionPointServiceServer) {
	// If the following call pancis, it indicates UnimplementedHistoryDayTrafficDataByDetectionPointServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&HistoryDayTrafficDataByDetectionPointService_ServiceDesc, srv)
}

func _HistoryDayTrafficDataByDetectionPointService_ListHistoryDayTrafficDataByDetectionPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTrafficDataByDetectionPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryDayTrafficDataByDetectionPointServiceServer).ListHistoryDayTrafficDataByDetectionPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HistoryDayTrafficDataByDetectionPointService_ListHistoryDayTrafficDataByDetectionPoint_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryDayTrafficDataByDetectionPointServiceServer).ListHistoryDayTrafficDataByDetectionPoint(ctx, req.(*ListTrafficDataByDetectionPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HistoryDayTrafficDataByDetectionPointService_GetHistoryDayTrafficDataByDetectionPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTrafficDataByDetectionPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryDayTrafficDataByDetectionPointServiceServer).GetHistoryDayTrafficDataByDetectionPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HistoryDayTrafficDataByDetectionPointService_GetHistoryDayTrafficDataByDetectionPoint_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryDayTrafficDataByDetectionPointServiceServer).GetHistoryDayTrafficDataByDetectionPoint(ctx, req.(*GetTrafficDataByDetectionPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HistoryDayTrafficDataByDetectionPointService_CreateHistoryDayTrafficDataByDetectionPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateHistoryDayTrafficDataByDetectionPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryDayTrafficDataByDetectionPointServiceServer).CreateHistoryDayTrafficDataByDetectionPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HistoryDayTrafficDataByDetectionPointService_CreateHistoryDayTrafficDataByDetectionPoint_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryDayTrafficDataByDetectionPointServiceServer).CreateHistoryDayTrafficDataByDetectionPoint(ctx, req.(*CreateHistoryDayTrafficDataByDetectionPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HistoryDayTrafficDataByDetectionPointService_UpdateHistoryDayTrafficDataByDetectionPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateHistoryDayTrafficDataByDetectionPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryDayTrafficDataByDetectionPointServiceServer).UpdateHistoryDayTrafficDataByDetectionPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HistoryDayTrafficDataByDetectionPointService_UpdateHistoryDayTrafficDataByDetectionPoint_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryDayTrafficDataByDetectionPointServiceServer).UpdateHistoryDayTrafficDataByDetectionPoint(ctx, req.(*UpdateHistoryDayTrafficDataByDetectionPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HistoryDayTrafficDataByDetectionPointService_DeleteHistoryDayTrafficDataByDetectionPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTrafficDataByDetectionPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryDayTrafficDataByDetectionPointServiceServer).DeleteHistoryDayTrafficDataByDetectionPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HistoryDayTrafficDataByDetectionPointService_DeleteHistoryDayTrafficDataByDetectionPoint_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryDayTrafficDataByDetectionPointServiceServer).DeleteHistoryDayTrafficDataByDetectionPoint(ctx, req.(*DeleteTrafficDataByDetectionPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HistoryDayTrafficDataByDetectionPointService_BulkCreateHistoryDayTrafficDataByDetectionPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BulkCreateTrafficDataByDetectionPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryDayTrafficDataByDetectionPointServiceServer).BulkCreateHistoryDayTrafficDataByDetectionPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HistoryDayTrafficDataByDetectionPointService_BulkCreateHistoryDayTrafficDataByDetectionPoint_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryDayTrafficDataByDetectionPointServiceServer).BulkCreateHistoryDayTrafficDataByDetectionPoint(ctx, req.(*BulkCreateTrafficDataByDetectionPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HistoryDayTrafficDataByDetectionPointService_GetHistoryDayTrafficDataByDetectionPointStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTrafficDataByDetectionPointStatisticsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryDayTrafficDataByDetectionPointServiceServer).GetHistoryDayTrafficDataByDetectionPointStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HistoryDayTrafficDataByDetectionPointService_GetHistoryDayTrafficDataByDetectionPointStatistics_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryDayTrafficDataByDetectionPointServiceServer).GetHistoryDayTrafficDataByDetectionPointStatistics(ctx, req.(*GetTrafficDataByDetectionPointStatisticsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HistoryDayTrafficDataByDetectionPointService_ListHistoryDayTrafficDataByDetectionPointDaily_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTrafficDataByDetectionPointDailyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryDayTrafficDataByDetectionPointServiceServer).ListHistoryDayTrafficDataByDetectionPointDaily(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HistoryDayTrafficDataByDetectionPointService_ListHistoryDayTrafficDataByDetectionPointDaily_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryDayTrafficDataByDetectionPointServiceServer).ListHistoryDayTrafficDataByDetectionPointDaily(ctx, req.(*ListTrafficDataByDetectionPointDailyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HistoryDayTrafficDataByDetectionPointService_DownloadHistoryDayTrafficDataByDetectionPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadTrafficDataByDetectionPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryDayTrafficDataByDetectionPointServiceServer).DownloadHistoryDayTrafficDataByDetectionPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HistoryDayTrafficDataByDetectionPointService_DownloadHistoryDayTrafficDataByDetectionPoint_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryDayTrafficDataByDetectionPointServiceServer).DownloadHistoryDayTrafficDataByDetectionPoint(ctx, req.(*DownloadTrafficDataByDetectionPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// HistoryDayTrafficDataByDetectionPointService_ServiceDesc is the grpc.ServiceDesc for HistoryDayTrafficDataByDetectionPointService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var HistoryDayTrafficDataByDetectionPointService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.HistoryDayTrafficDataByDetectionPointService",
	HandlerType: (*HistoryDayTrafficDataByDetectionPointServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListHistoryDayTrafficDataByDetectionPoint",
			Handler:    _HistoryDayTrafficDataByDetectionPointService_ListHistoryDayTrafficDataByDetectionPoint_Handler,
		},
		{
			MethodName: "GetHistoryDayTrafficDataByDetectionPoint",
			Handler:    _HistoryDayTrafficDataByDetectionPointService_GetHistoryDayTrafficDataByDetectionPoint_Handler,
		},
		{
			MethodName: "CreateHistoryDayTrafficDataByDetectionPoint",
			Handler:    _HistoryDayTrafficDataByDetectionPointService_CreateHistoryDayTrafficDataByDetectionPoint_Handler,
		},
		{
			MethodName: "UpdateHistoryDayTrafficDataByDetectionPoint",
			Handler:    _HistoryDayTrafficDataByDetectionPointService_UpdateHistoryDayTrafficDataByDetectionPoint_Handler,
		},
		{
			MethodName: "DeleteHistoryDayTrafficDataByDetectionPoint",
			Handler:    _HistoryDayTrafficDataByDetectionPointService_DeleteHistoryDayTrafficDataByDetectionPoint_Handler,
		},
		{
			MethodName: "BulkCreateHistoryDayTrafficDataByDetectionPoint",
			Handler:    _HistoryDayTrafficDataByDetectionPointService_BulkCreateHistoryDayTrafficDataByDetectionPoint_Handler,
		},
		{
			MethodName: "GetHistoryDayTrafficDataByDetectionPointStatistics",
			Handler:    _HistoryDayTrafficDataByDetectionPointService_GetHistoryDayTrafficDataByDetectionPointStatistics_Handler,
		},
		{
			MethodName: "ListHistoryDayTrafficDataByDetectionPointDaily",
			Handler:    _HistoryDayTrafficDataByDetectionPointService_ListHistoryDayTrafficDataByDetectionPointDaily_Handler,
		},
		{
			MethodName: "DownloadHistoryDayTrafficDataByDetectionPoint",
			Handler:    _HistoryDayTrafficDataByDetectionPointService_DownloadHistoryDayTrafficDataByDetectionPoint_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/history_day_traffic_data_detection_point.service.proto",
}
