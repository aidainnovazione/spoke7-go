// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v6.30.1
// source: services/current_traffic_data_detection_section.service.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	CurrentTrafficDataByDetectionSectionService_ListCurrentTrafficDataByDetectionSections_FullMethodName         = "/pb.CurrentTrafficDataByDetectionSectionService/ListCurrentTrafficDataByDetectionSections"
	CurrentTrafficDataByDetectionSectionService_GetCurrentTrafficDataByDetectionSection_FullMethodName           = "/pb.CurrentTrafficDataByDetectionSectionService/GetCurrentTrafficDataByDetectionSection"
	CurrentTrafficDataByDetectionSectionService_CreateCurrentTrafficDataByDetectionSection_FullMethodName        = "/pb.CurrentTrafficDataByDetectionSectionService/CreateCurrentTrafficDataByDetectionSection"
	CurrentTrafficDataByDetectionSectionService_UpdateCurrentTrafficDataByDetectionSection_FullMethodName        = "/pb.CurrentTrafficDataByDetectionSectionService/UpdateCurrentTrafficDataByDetectionSection"
	CurrentTrafficDataByDetectionSectionService_DeleteCurrentTrafficDataByDetectionSection_FullMethodName        = "/pb.CurrentTrafficDataByDetectionSectionService/DeleteCurrentTrafficDataByDetectionSection"
	CurrentTrafficDataByDetectionSectionService_BulkCreateCurrentTrafficDataByDetectionSection_FullMethodName    = "/pb.CurrentTrafficDataByDetectionSectionService/BulkCreateCurrentTrafficDataByDetectionSection"
	CurrentTrafficDataByDetectionSectionService_GetCurrentTrafficDataByDetectionSectionStatistics_FullMethodName = "/pb.CurrentTrafficDataByDetectionSectionService/GetCurrentTrafficDataByDetectionSectionStatistics"
	CurrentTrafficDataByDetectionSectionService_ListCurrentTrafficDataByDetectionSectionDaily_FullMethodName     = "/pb.CurrentTrafficDataByDetectionSectionService/ListCurrentTrafficDataByDetectionSectionDaily"
	CurrentTrafficDataByDetectionSectionService_DownloadCurrentTrafficDataByDetectionSection_FullMethodName      = "/pb.CurrentTrafficDataByDetectionSectionService/DownloadCurrentTrafficDataByDetectionSection"
)

// CurrentTrafficDataByDetectionSectionServiceClient is the client API for CurrentTrafficDataByDetectionSectionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CurrentTrafficDataByDetectionSectionServiceClient interface {
	ListCurrentTrafficDataByDetectionSections(ctx context.Context, in *ListTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*ListCurrentTrafficDataByDetectionSectionsResponse, error)
	GetCurrentTrafficDataByDetectionSection(ctx context.Context, in *GetTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*GetCurrentTrafficDataByDetectionSectionsResponse, error)
	CreateCurrentTrafficDataByDetectionSection(ctx context.Context, in *CreateCurrentTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*CreateCurrentTrafficDataByDetectionSectionResponse, error)
	UpdateCurrentTrafficDataByDetectionSection(ctx context.Context, in *UpdateCurrentTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*UpdateCurrentTrafficDataByDetectionSectionResponse, error)
	DeleteCurrentTrafficDataByDetectionSection(ctx context.Context, in *DeleteTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	BulkCreateCurrentTrafficDataByDetectionSection(ctx context.Context, in *BulkCreateTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*BulkCreateTrafficDataByDetectionSectionResponse, error)
	GetCurrentTrafficDataByDetectionSectionStatistics(ctx context.Context, in *GetTrafficDataByDetectionSectionStatisticsRequest, opts ...grpc.CallOption) (*GetCurrentTrafficDataByDetectionSectionStatisticsResponse, error)
	ListCurrentTrafficDataByDetectionSectionDaily(ctx context.Context, in *ListTrafficDataByDetectionSectionDailyRequest, opts ...grpc.CallOption) (*ListCurrentTrafficDataByDetectionSectionDailyResponse, error)
	DownloadCurrentTrafficDataByDetectionSection(ctx context.Context, in *DownloadTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*DownloadResponse, error)
}

type currentTrafficDataByDetectionSectionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCurrentTrafficDataByDetectionSectionServiceClient(cc grpc.ClientConnInterface) CurrentTrafficDataByDetectionSectionServiceClient {
	return &currentTrafficDataByDetectionSectionServiceClient{cc}
}

func (c *currentTrafficDataByDetectionSectionServiceClient) ListCurrentTrafficDataByDetectionSections(ctx context.Context, in *ListTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*ListCurrentTrafficDataByDetectionSectionsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListCurrentTrafficDataByDetectionSectionsResponse)
	err := c.cc.Invoke(ctx, CurrentTrafficDataByDetectionSectionService_ListCurrentTrafficDataByDetectionSections_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *currentTrafficDataByDetectionSectionServiceClient) GetCurrentTrafficDataByDetectionSection(ctx context.Context, in *GetTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*GetCurrentTrafficDataByDetectionSectionsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetCurrentTrafficDataByDetectionSectionsResponse)
	err := c.cc.Invoke(ctx, CurrentTrafficDataByDetectionSectionService_GetCurrentTrafficDataByDetectionSection_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *currentTrafficDataByDetectionSectionServiceClient) CreateCurrentTrafficDataByDetectionSection(ctx context.Context, in *CreateCurrentTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*CreateCurrentTrafficDataByDetectionSectionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateCurrentTrafficDataByDetectionSectionResponse)
	err := c.cc.Invoke(ctx, CurrentTrafficDataByDetectionSectionService_CreateCurrentTrafficDataByDetectionSection_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *currentTrafficDataByDetectionSectionServiceClient) UpdateCurrentTrafficDataByDetectionSection(ctx context.Context, in *UpdateCurrentTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*UpdateCurrentTrafficDataByDetectionSectionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateCurrentTrafficDataByDetectionSectionResponse)
	err := c.cc.Invoke(ctx, CurrentTrafficDataByDetectionSectionService_UpdateCurrentTrafficDataByDetectionSection_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *currentTrafficDataByDetectionSectionServiceClient) DeleteCurrentTrafficDataByDetectionSection(ctx context.Context, in *DeleteTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CurrentTrafficDataByDetectionSectionService_DeleteCurrentTrafficDataByDetectionSection_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *currentTrafficDataByDetectionSectionServiceClient) BulkCreateCurrentTrafficDataByDetectionSection(ctx context.Context, in *BulkCreateTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*BulkCreateTrafficDataByDetectionSectionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(BulkCreateTrafficDataByDetectionSectionResponse)
	err := c.cc.Invoke(ctx, CurrentTrafficDataByDetectionSectionService_BulkCreateCurrentTrafficDataByDetectionSection_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *currentTrafficDataByDetectionSectionServiceClient) GetCurrentTrafficDataByDetectionSectionStatistics(ctx context.Context, in *GetTrafficDataByDetectionSectionStatisticsRequest, opts ...grpc.CallOption) (*GetCurrentTrafficDataByDetectionSectionStatisticsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetCurrentTrafficDataByDetectionSectionStatisticsResponse)
	err := c.cc.Invoke(ctx, CurrentTrafficDataByDetectionSectionService_GetCurrentTrafficDataByDetectionSectionStatistics_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *currentTrafficDataByDetectionSectionServiceClient) ListCurrentTrafficDataByDetectionSectionDaily(ctx context.Context, in *ListTrafficDataByDetectionSectionDailyRequest, opts ...grpc.CallOption) (*ListCurrentTrafficDataByDetectionSectionDailyResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListCurrentTrafficDataByDetectionSectionDailyResponse)
	err := c.cc.Invoke(ctx, CurrentTrafficDataByDetectionSectionService_ListCurrentTrafficDataByDetectionSectionDaily_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *currentTrafficDataByDetectionSectionServiceClient) DownloadCurrentTrafficDataByDetectionSection(ctx context.Context, in *DownloadTrafficDataByDetectionSectionRequest, opts ...grpc.CallOption) (*DownloadResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DownloadResponse)
	err := c.cc.Invoke(ctx, CurrentTrafficDataByDetectionSectionService_DownloadCurrentTrafficDataByDetectionSection_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CurrentTrafficDataByDetectionSectionServiceServer is the server API for CurrentTrafficDataByDetectionSectionService service.
// All implementations must embed UnimplementedCurrentTrafficDataByDetectionSectionServiceServer
// for forward compatibility.
type CurrentTrafficDataByDetectionSectionServiceServer interface {
	ListCurrentTrafficDataByDetectionSections(context.Context, *ListTrafficDataByDetectionSectionRequest) (*ListCurrentTrafficDataByDetectionSectionsResponse, error)
	GetCurrentTrafficDataByDetectionSection(context.Context, *GetTrafficDataByDetectionSectionRequest) (*GetCurrentTrafficDataByDetectionSectionsResponse, error)
	CreateCurrentTrafficDataByDetectionSection(context.Context, *CreateCurrentTrafficDataByDetectionSectionRequest) (*CreateCurrentTrafficDataByDetectionSectionResponse, error)
	UpdateCurrentTrafficDataByDetectionSection(context.Context, *UpdateCurrentTrafficDataByDetectionSectionRequest) (*UpdateCurrentTrafficDataByDetectionSectionResponse, error)
	DeleteCurrentTrafficDataByDetectionSection(context.Context, *DeleteTrafficDataByDetectionSectionRequest) (*emptypb.Empty, error)
	BulkCreateCurrentTrafficDataByDetectionSection(context.Context, *BulkCreateTrafficDataByDetectionSectionRequest) (*BulkCreateTrafficDataByDetectionSectionResponse, error)
	GetCurrentTrafficDataByDetectionSectionStatistics(context.Context, *GetTrafficDataByDetectionSectionStatisticsRequest) (*GetCurrentTrafficDataByDetectionSectionStatisticsResponse, error)
	ListCurrentTrafficDataByDetectionSectionDaily(context.Context, *ListTrafficDataByDetectionSectionDailyRequest) (*ListCurrentTrafficDataByDetectionSectionDailyResponse, error)
	DownloadCurrentTrafficDataByDetectionSection(context.Context, *DownloadTrafficDataByDetectionSectionRequest) (*DownloadResponse, error)
	mustEmbedUnimplementedCurrentTrafficDataByDetectionSectionServiceServer()
}

// UnimplementedCurrentTrafficDataByDetectionSectionServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedCurrentTrafficDataByDetectionSectionServiceServer struct{}

func (UnimplementedCurrentTrafficDataByDetectionSectionServiceServer) ListCurrentTrafficDataByDetectionSections(context.Context, *ListTrafficDataByDetectionSectionRequest) (*ListCurrentTrafficDataByDetectionSectionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCurrentTrafficDataByDetectionSections not implemented")
}
func (UnimplementedCurrentTrafficDataByDetectionSectionServiceServer) GetCurrentTrafficDataByDetectionSection(context.Context, *GetTrafficDataByDetectionSectionRequest) (*GetCurrentTrafficDataByDetectionSectionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCurrentTrafficDataByDetectionSection not implemented")
}
func (UnimplementedCurrentTrafficDataByDetectionSectionServiceServer) CreateCurrentTrafficDataByDetectionSection(context.Context, *CreateCurrentTrafficDataByDetectionSectionRequest) (*CreateCurrentTrafficDataByDetectionSectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCurrentTrafficDataByDetectionSection not implemented")
}
func (UnimplementedCurrentTrafficDataByDetectionSectionServiceServer) UpdateCurrentTrafficDataByDetectionSection(context.Context, *UpdateCurrentTrafficDataByDetectionSectionRequest) (*UpdateCurrentTrafficDataByDetectionSectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCurrentTrafficDataByDetectionSection not implemented")
}
func (UnimplementedCurrentTrafficDataByDetectionSectionServiceServer) DeleteCurrentTrafficDataByDetectionSection(context.Context, *DeleteTrafficDataByDetectionSectionRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCurrentTrafficDataByDetectionSection not implemented")
}
func (UnimplementedCurrentTrafficDataByDetectionSectionServiceServer) BulkCreateCurrentTrafficDataByDetectionSection(context.Context, *BulkCreateTrafficDataByDetectionSectionRequest) (*BulkCreateTrafficDataByDetectionSectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BulkCreateCurrentTrafficDataByDetectionSection not implemented")
}
func (UnimplementedCurrentTrafficDataByDetectionSectionServiceServer) GetCurrentTrafficDataByDetectionSectionStatistics(context.Context, *GetTrafficDataByDetectionSectionStatisticsRequest) (*GetCurrentTrafficDataByDetectionSectionStatisticsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCurrentTrafficDataByDetectionSectionStatistics not implemented")
}
func (UnimplementedCurrentTrafficDataByDetectionSectionServiceServer) ListCurrentTrafficDataByDetectionSectionDaily(context.Context, *ListTrafficDataByDetectionSectionDailyRequest) (*ListCurrentTrafficDataByDetectionSectionDailyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCurrentTrafficDataByDetectionSectionDaily not implemented")
}
func (UnimplementedCurrentTrafficDataByDetectionSectionServiceServer) DownloadCurrentTrafficDataByDetectionSection(context.Context, *DownloadTrafficDataByDetectionSectionRequest) (*DownloadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DownloadCurrentTrafficDataByDetectionSection not implemented")
}
func (UnimplementedCurrentTrafficDataByDetectionSectionServiceServer) mustEmbedUnimplementedCurrentTrafficDataByDetectionSectionServiceServer() {
}
func (UnimplementedCurrentTrafficDataByDetectionSectionServiceServer) testEmbeddedByValue() {}

// UnsafeCurrentTrafficDataByDetectionSectionServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CurrentTrafficDataByDetectionSectionServiceServer will
// result in compilation errors.
type UnsafeCurrentTrafficDataByDetectionSectionServiceServer interface {
	mustEmbedUnimplementedCurrentTrafficDataByDetectionSectionServiceServer()
}

func RegisterCurrentTrafficDataByDetectionSectionServiceServer(s grpc.ServiceRegistrar, srv CurrentTrafficDataByDetectionSectionServiceServer) {
	// If the following call pancis, it indicates UnimplementedCurrentTrafficDataByDetectionSectionServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&CurrentTrafficDataByDetectionSectionService_ServiceDesc, srv)
}

func _CurrentTrafficDataByDetectionSectionService_ListCurrentTrafficDataByDetectionSections_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTrafficDataByDetectionSectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrentTrafficDataByDetectionSectionServiceServer).ListCurrentTrafficDataByDetectionSections(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CurrentTrafficDataByDetectionSectionService_ListCurrentTrafficDataByDetectionSections_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrentTrafficDataByDetectionSectionServiceServer).ListCurrentTrafficDataByDetectionSections(ctx, req.(*ListTrafficDataByDetectionSectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CurrentTrafficDataByDetectionSectionService_GetCurrentTrafficDataByDetectionSection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTrafficDataByDetectionSectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrentTrafficDataByDetectionSectionServiceServer).GetCurrentTrafficDataByDetectionSection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CurrentTrafficDataByDetectionSectionService_GetCurrentTrafficDataByDetectionSection_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrentTrafficDataByDetectionSectionServiceServer).GetCurrentTrafficDataByDetectionSection(ctx, req.(*GetTrafficDataByDetectionSectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CurrentTrafficDataByDetectionSectionService_CreateCurrentTrafficDataByDetectionSection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCurrentTrafficDataByDetectionSectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrentTrafficDataByDetectionSectionServiceServer).CreateCurrentTrafficDataByDetectionSection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CurrentTrafficDataByDetectionSectionService_CreateCurrentTrafficDataByDetectionSection_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrentTrafficDataByDetectionSectionServiceServer).CreateCurrentTrafficDataByDetectionSection(ctx, req.(*CreateCurrentTrafficDataByDetectionSectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CurrentTrafficDataByDetectionSectionService_UpdateCurrentTrafficDataByDetectionSection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCurrentTrafficDataByDetectionSectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrentTrafficDataByDetectionSectionServiceServer).UpdateCurrentTrafficDataByDetectionSection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CurrentTrafficDataByDetectionSectionService_UpdateCurrentTrafficDataByDetectionSection_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrentTrafficDataByDetectionSectionServiceServer).UpdateCurrentTrafficDataByDetectionSection(ctx, req.(*UpdateCurrentTrafficDataByDetectionSectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CurrentTrafficDataByDetectionSectionService_DeleteCurrentTrafficDataByDetectionSection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTrafficDataByDetectionSectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrentTrafficDataByDetectionSectionServiceServer).DeleteCurrentTrafficDataByDetectionSection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CurrentTrafficDataByDetectionSectionService_DeleteCurrentTrafficDataByDetectionSection_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrentTrafficDataByDetectionSectionServiceServer).DeleteCurrentTrafficDataByDetectionSection(ctx, req.(*DeleteTrafficDataByDetectionSectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CurrentTrafficDataByDetectionSectionService_BulkCreateCurrentTrafficDataByDetectionSection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BulkCreateTrafficDataByDetectionSectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrentTrafficDataByDetectionSectionServiceServer).BulkCreateCurrentTrafficDataByDetectionSection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CurrentTrafficDataByDetectionSectionService_BulkCreateCurrentTrafficDataByDetectionSection_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrentTrafficDataByDetectionSectionServiceServer).BulkCreateCurrentTrafficDataByDetectionSection(ctx, req.(*BulkCreateTrafficDataByDetectionSectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CurrentTrafficDataByDetectionSectionService_GetCurrentTrafficDataByDetectionSectionStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTrafficDataByDetectionSectionStatisticsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrentTrafficDataByDetectionSectionServiceServer).GetCurrentTrafficDataByDetectionSectionStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CurrentTrafficDataByDetectionSectionService_GetCurrentTrafficDataByDetectionSectionStatistics_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrentTrafficDataByDetectionSectionServiceServer).GetCurrentTrafficDataByDetectionSectionStatistics(ctx, req.(*GetTrafficDataByDetectionSectionStatisticsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CurrentTrafficDataByDetectionSectionService_ListCurrentTrafficDataByDetectionSectionDaily_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTrafficDataByDetectionSectionDailyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrentTrafficDataByDetectionSectionServiceServer).ListCurrentTrafficDataByDetectionSectionDaily(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CurrentTrafficDataByDetectionSectionService_ListCurrentTrafficDataByDetectionSectionDaily_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrentTrafficDataByDetectionSectionServiceServer).ListCurrentTrafficDataByDetectionSectionDaily(ctx, req.(*ListTrafficDataByDetectionSectionDailyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CurrentTrafficDataByDetectionSectionService_DownloadCurrentTrafficDataByDetectionSection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadTrafficDataByDetectionSectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrentTrafficDataByDetectionSectionServiceServer).DownloadCurrentTrafficDataByDetectionSection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CurrentTrafficDataByDetectionSectionService_DownloadCurrentTrafficDataByDetectionSection_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrentTrafficDataByDetectionSectionServiceServer).DownloadCurrentTrafficDataByDetectionSection(ctx, req.(*DownloadTrafficDataByDetectionSectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CurrentTrafficDataByDetectionSectionService_ServiceDesc is the grpc.ServiceDesc for CurrentTrafficDataByDetectionSectionService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CurrentTrafficDataByDetectionSectionService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.CurrentTrafficDataByDetectionSectionService",
	HandlerType: (*CurrentTrafficDataByDetectionSectionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListCurrentTrafficDataByDetectionSections",
			Handler:    _CurrentTrafficDataByDetectionSectionService_ListCurrentTrafficDataByDetectionSections_Handler,
		},
		{
			MethodName: "GetCurrentTrafficDataByDetectionSection",
			Handler:    _CurrentTrafficDataByDetectionSectionService_GetCurrentTrafficDataByDetectionSection_Handler,
		},
		{
			MethodName: "CreateCurrentTrafficDataByDetectionSection",
			Handler:    _CurrentTrafficDataByDetectionSectionService_CreateCurrentTrafficDataByDetectionSection_Handler,
		},
		{
			MethodName: "UpdateCurrentTrafficDataByDetectionSection",
			Handler:    _CurrentTrafficDataByDetectionSectionService_UpdateCurrentTrafficDataByDetectionSection_Handler,
		},
		{
			MethodName: "DeleteCurrentTrafficDataByDetectionSection",
			Handler:    _CurrentTrafficDataByDetectionSectionService_DeleteCurrentTrafficDataByDetectionSection_Handler,
		},
		{
			MethodName: "BulkCreateCurrentTrafficDataByDetectionSection",
			Handler:    _CurrentTrafficDataByDetectionSectionService_BulkCreateCurrentTrafficDataByDetectionSection_Handler,
		},
		{
			MethodName: "GetCurrentTrafficDataByDetectionSectionStatistics",
			Handler:    _CurrentTrafficDataByDetectionSectionService_GetCurrentTrafficDataByDetectionSectionStatistics_Handler,
		},
		{
			MethodName: "ListCurrentTrafficDataByDetectionSectionDaily",
			Handler:    _CurrentTrafficDataByDetectionSectionService_ListCurrentTrafficDataByDetectionSectionDaily_Handler,
		},
		{
			MethodName: "DownloadCurrentTrafficDataByDetectionSection",
			Handler:    _CurrentTrafficDataByDetectionSectionService_DownloadCurrentTrafficDataByDetectionSection_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/current_traffic_data_detection_section.service.proto",
}
