// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.1
// source: dtos/traffic_statistics.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// current
type CurrentTrafficDataByDetectionPointByLaneStatistics struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	LaneId                       string                 `protobuf:"bytes,1,opt,name=lane_id,json=laneId,proto3" json:"lane_id,omitempty"`
	RecordsCount                 uint32                 `protobuf:"varint,2,opt,name=records_count,json=recordsCount,proto3" json:"records_count,omitempty"`
	FirstRecordTimestamp         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=first_record_timestamp,json=firstRecordTimestamp,proto3" json:"first_record_timestamp,omitempty"`
	LastRecordTimestamp          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_record_timestamp,json=lastRecordTimestamp,proto3" json:"last_record_timestamp,omitempty"`
	LongestDataGap               float32                `protobuf:"fixed32,5,opt,name=longest_data_gap,json=longestDataGap,proto3" json:"longest_data_gap,omitempty"`
	LongestDataGapStartTimestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=longest_data_gap_start_timestamp,json=longestDataGapStartTimestamp,proto3" json:"longest_data_gap_start_timestamp,omitempty"`
	LongestDataGapEndTimestamp   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=longest_data_gap_end_timestamp,json=longestDataGapEndTimestamp,proto3" json:"longest_data_gap_end_timestamp,omitempty"`
	MissingIntervalDetectionRate float32                `protobuf:"fixed32,8,opt,name=missing_interval_detection_rate,json=missingIntervalDetectionRate,proto3" json:"missing_interval_detection_rate,omitempty"` // Percentage of expected intervals that are missing data.
	// total
	TotalCountAllVehicles            uint32  `protobuf:"varint,9,opt,name=total_count_all_vehicles,json=totalCountAllVehicles,proto3" json:"total_count_all_vehicles,omitempty"`                                        // all counted vehicles
	TotalHarmonicMeanSpeedAllRecords float32 `protobuf:"fixed32,10,opt,name=total_harmonic_mean_speed_all_records,json=totalHarmonicMeanSpeedAllRecords,proto3" json:"total_harmonic_mean_speed_all_records,omitempty"` // mean speed of all means
	// rate
	PercentageRecordsWithCounts               float32 `protobuf:"fixed32,11,opt,name=percentage_records_with_counts,json=percentageRecordsWithCounts,proto3" json:"percentage_records_with_counts,omitempty"`                                               // how many records have at least one count expressed as a percentage
	PercentageRecordsWithPositiveAverageSpeed float32 `protobuf:"fixed32,12,opt,name=percentage_records_with_positive_average_speed,json=percentageRecordsWithPositiveAverageSpeed,proto3" json:"percentage_records_with_positive_average_speed,omitempty"` // how many records have an average speed more than 0 expressed as a percentage
	unknownFields                             protoimpl.UnknownFields
	sizeCache                                 protoimpl.SizeCache
}

func (x *CurrentTrafficDataByDetectionPointByLaneStatistics) Reset() {
	*x = CurrentTrafficDataByDetectionPointByLaneStatistics{}
	mi := &file_dtos_traffic_statistics_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentTrafficDataByDetectionPointByLaneStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentTrafficDataByDetectionPointByLaneStatistics) ProtoMessage() {}

func (x *CurrentTrafficDataByDetectionPointByLaneStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_dtos_traffic_statistics_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentTrafficDataByDetectionPointByLaneStatistics.ProtoReflect.Descriptor instead.
func (*CurrentTrafficDataByDetectionPointByLaneStatistics) Descriptor() ([]byte, []int) {
	return file_dtos_traffic_statistics_proto_rawDescGZIP(), []int{0}
}

func (x *CurrentTrafficDataByDetectionPointByLaneStatistics) GetLaneId() string {
	if x != nil {
		return x.LaneId
	}
	return ""
}

func (x *CurrentTrafficDataByDetectionPointByLaneStatistics) GetRecordsCount() uint32 {
	if x != nil {
		return x.RecordsCount
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointByLaneStatistics) GetFirstRecordTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstRecordTimestamp
	}
	return nil
}

func (x *CurrentTrafficDataByDetectionPointByLaneStatistics) GetLastRecordTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LastRecordTimestamp
	}
	return nil
}

func (x *CurrentTrafficDataByDetectionPointByLaneStatistics) GetLongestDataGap() float32 {
	if x != nil {
		return x.LongestDataGap
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointByLaneStatistics) GetLongestDataGapStartTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LongestDataGapStartTimestamp
	}
	return nil
}

func (x *CurrentTrafficDataByDetectionPointByLaneStatistics) GetLongestDataGapEndTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LongestDataGapEndTimestamp
	}
	return nil
}

func (x *CurrentTrafficDataByDetectionPointByLaneStatistics) GetMissingIntervalDetectionRate() float32 {
	if x != nil {
		return x.MissingIntervalDetectionRate
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointByLaneStatistics) GetTotalCountAllVehicles() uint32 {
	if x != nil {
		return x.TotalCountAllVehicles
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointByLaneStatistics) GetTotalHarmonicMeanSpeedAllRecords() float32 {
	if x != nil {
		return x.TotalHarmonicMeanSpeedAllRecords
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointByLaneStatistics) GetPercentageRecordsWithCounts() float32 {
	if x != nil {
		return x.PercentageRecordsWithCounts
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointByLaneStatistics) GetPercentageRecordsWithPositiveAverageSpeed() float32 {
	if x != nil {
		return x.PercentageRecordsWithPositiveAverageSpeed
	}
	return 0
}

type CurrentTrafficDataByDetectionPointByLaneAggregate struct {
	state                                        protoimpl.MessageState `protogen:"open.v1"`
	DataSourceName                               string                 `protobuf:"bytes,1,opt,name=data_source_name,json=dataSourceName,proto3" json:"data_source_name,omitempty"`
	DetectionTimestamp                           *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=detection_timestamp,json=detectionTimestamp,proto3" json:"detection_timestamp,omitempty"`
	RecordsCount                                 uint32                 `protobuf:"varint,3,opt,name=records_count,json=recordsCount,proto3" json:"records_count,omitempty"`
	AggPercentageRecords                         float32                `protobuf:"fixed32,4,opt,name=agg_percentage_records,json=aggPercentageRecords,proto3" json:"agg_percentage_records,omitempty"`
	AggPercentageRecordsWithCounts               float32                `protobuf:"fixed32,5,opt,name=agg_percentage_records_with_counts,json=aggPercentageRecordsWithCounts,proto3" json:"agg_percentage_records_with_counts,omitempty"`                                               // how many records have at least one count expressed as a percentage
	AggPercentageRecordsWithPositiveAverageSpeed float32                `protobuf:"fixed32,6,opt,name=agg_percentage_records_with_positive_average_speed,json=aggPercentageRecordsWithPositiveAverageSpeed,proto3" json:"agg_percentage_records_with_positive_average_speed,omitempty"` // how many records have an average speed more than 0 expressed as a percentage
	AggCountVehicleClassAll                      float32                `protobuf:"fixed32,7,opt,name=agg_count_vehicle_class_all,json=aggCountVehicleClassAll,proto3" json:"agg_count_vehicle_class_all,omitempty"`
	AggHarmonicMeanSpeedVehicleClassAll          float32                `protobuf:"fixed32,8,opt,name=agg_harmonic_mean_speed_vehicle_class_all,json=aggHarmonicMeanSpeedVehicleClassAll,proto3" json:"agg_harmonic_mean_speed_vehicle_class_all,omitempty"`
	AggAverageVehicleLength                      float32                `protobuf:"fixed32,9,opt,name=agg_average_vehicle_length,json=aggAverageVehicleLength,proto3" json:"agg_average_vehicle_length,omitempty"`
	// headway fra veicoli
	AggAverageHeadway float32 `protobuf:"fixed32,10,opt,name=agg_average_headway,json=aggAverageHeadway,proto3" json:"agg_average_headway,omitempty"`
	AggStdHeadway     float32 `protobuf:"fixed32,11,opt,name=agg_std_headway,json=aggStdHeadway,proto3" json:"agg_std_headway,omitempty"`
	// time-to-collision
	AggAverageTimeToCollision float32 `protobuf:"fixed32,12,opt,name=agg_average_time_to_collision,json=aggAverageTimeToCollision,proto3" json:"agg_average_time_to_collision,omitempty"`
	AggStdTimeToCollision     float32 `protobuf:"fixed32,13,opt,name=agg_std_time_to_collision,json=aggStdTimeToCollision,proto3" json:"agg_std_time_to_collision,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *CurrentTrafficDataByDetectionPointByLaneAggregate) Reset() {
	*x = CurrentTrafficDataByDetectionPointByLaneAggregate{}
	mi := &file_dtos_traffic_statistics_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentTrafficDataByDetectionPointByLaneAggregate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentTrafficDataByDetectionPointByLaneAggregate) ProtoMessage() {}

func (x *CurrentTrafficDataByDetectionPointByLaneAggregate) ProtoReflect() protoreflect.Message {
	mi := &file_dtos_traffic_statistics_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentTrafficDataByDetectionPointByLaneAggregate.ProtoReflect.Descriptor instead.
func (*CurrentTrafficDataByDetectionPointByLaneAggregate) Descriptor() ([]byte, []int) {
	return file_dtos_traffic_statistics_proto_rawDescGZIP(), []int{1}
}

func (x *CurrentTrafficDataByDetectionPointByLaneAggregate) GetDataSourceName() string {
	if x != nil {
		return x.DataSourceName
	}
	return ""
}

func (x *CurrentTrafficDataByDetectionPointByLaneAggregate) GetDetectionTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.DetectionTimestamp
	}
	return nil
}

func (x *CurrentTrafficDataByDetectionPointByLaneAggregate) GetRecordsCount() uint32 {
	if x != nil {
		return x.RecordsCount
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointByLaneAggregate) GetAggPercentageRecords() float32 {
	if x != nil {
		return x.AggPercentageRecords
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointByLaneAggregate) GetAggPercentageRecordsWithCounts() float32 {
	if x != nil {
		return x.AggPercentageRecordsWithCounts
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointByLaneAggregate) GetAggPercentageRecordsWithPositiveAverageSpeed() float32 {
	if x != nil {
		return x.AggPercentageRecordsWithPositiveAverageSpeed
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointByLaneAggregate) GetAggCountVehicleClassAll() float32 {
	if x != nil {
		return x.AggCountVehicleClassAll
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointByLaneAggregate) GetAggHarmonicMeanSpeedVehicleClassAll() float32 {
	if x != nil {
		return x.AggHarmonicMeanSpeedVehicleClassAll
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointByLaneAggregate) GetAggAverageVehicleLength() float32 {
	if x != nil {
		return x.AggAverageVehicleLength
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointByLaneAggregate) GetAggAverageHeadway() float32 {
	if x != nil {
		return x.AggAverageHeadway
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointByLaneAggregate) GetAggStdHeadway() float32 {
	if x != nil {
		return x.AggStdHeadway
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointByLaneAggregate) GetAggAverageTimeToCollision() float32 {
	if x != nil {
		return x.AggAverageTimeToCollision
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointByLaneAggregate) GetAggStdTimeToCollision() float32 {
	if x != nil {
		return x.AggStdTimeToCollision
	}
	return 0
}

type CurrentTrafficDataByDetectionSectionStatistics struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	DetectionSectionId           string                 `protobuf:"bytes,1,opt,name=detection_section_id,json=detectionSectionId,proto3" json:"detection_section_id,omitempty"`
	RecordsCount                 uint32                 `protobuf:"varint,2,opt,name=records_count,json=recordsCount,proto3" json:"records_count,omitempty"`
	FirstRecordTimestamp         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=first_record_timestamp,json=firstRecordTimestamp,proto3" json:"first_record_timestamp,omitempty"`
	LastRecordTimestamp          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_record_timestamp,json=lastRecordTimestamp,proto3" json:"last_record_timestamp,omitempty"`
	LongestDataGap               float32                `protobuf:"fixed32,5,opt,name=longest_data_gap,json=longestDataGap,proto3" json:"longest_data_gap,omitempty"`
	LongestDataGapStartTimestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=longest_data_gap_start_timestamp,json=longestDataGapStartTimestamp,proto3" json:"longest_data_gap_start_timestamp,omitempty"`
	LongestDataGapEndTimestamp   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=longest_data_gap_end_timestamp,json=longestDataGapEndTimestamp,proto3" json:"longest_data_gap_end_timestamp,omitempty"`
	MissingIntervalDetectionRate float32                `protobuf:"fixed32,8,opt,name=missing_interval_detection_rate,json=missingIntervalDetectionRate,proto3" json:"missing_interval_detection_rate,omitempty"` // Percentage of expected intervals that are missing data.
	// total
	TotalAverageForwardSpeed  float32 `protobuf:"fixed32,9,opt,name=total_average_forward_speed,json=totalAverageForwardSpeed,proto3" json:"total_average_forward_speed,omitempty"`
	TotalAverageBackwardSpeed float32 `protobuf:"fixed32,10,opt,name=total_average_backward_speed,json=totalAverageBackwardSpeed,proto3" json:"total_average_backward_speed,omitempty"`
	// rate
	PercentageRecordsWithForwardSpeed  float32 `protobuf:"fixed32,11,opt,name=percentage_records_with_forward_speed,json=percentageRecordsWithForwardSpeed,proto3" json:"percentage_records_with_forward_speed,omitempty"`    // percentage of records where fw speed is present
	PercentageRecordsWithBackwardSpeed float32 `protobuf:"fixed32,12,opt,name=percentage_records_with_backward_speed,json=percentageRecordsWithBackwardSpeed,proto3" json:"percentage_records_with_backward_speed,omitempty"` // percentage of records where bw speed is present
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

func (x *CurrentTrafficDataByDetectionSectionStatistics) Reset() {
	*x = CurrentTrafficDataByDetectionSectionStatistics{}
	mi := &file_dtos_traffic_statistics_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentTrafficDataByDetectionSectionStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentTrafficDataByDetectionSectionStatistics) ProtoMessage() {}

func (x *CurrentTrafficDataByDetectionSectionStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_dtos_traffic_statistics_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentTrafficDataByDetectionSectionStatistics.ProtoReflect.Descriptor instead.
func (*CurrentTrafficDataByDetectionSectionStatistics) Descriptor() ([]byte, []int) {
	return file_dtos_traffic_statistics_proto_rawDescGZIP(), []int{2}
}

func (x *CurrentTrafficDataByDetectionSectionStatistics) GetDetectionSectionId() string {
	if x != nil {
		return x.DetectionSectionId
	}
	return ""
}

func (x *CurrentTrafficDataByDetectionSectionStatistics) GetRecordsCount() uint32 {
	if x != nil {
		return x.RecordsCount
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionSectionStatistics) GetFirstRecordTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstRecordTimestamp
	}
	return nil
}

func (x *CurrentTrafficDataByDetectionSectionStatistics) GetLastRecordTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LastRecordTimestamp
	}
	return nil
}

func (x *CurrentTrafficDataByDetectionSectionStatistics) GetLongestDataGap() float32 {
	if x != nil {
		return x.LongestDataGap
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionSectionStatistics) GetLongestDataGapStartTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LongestDataGapStartTimestamp
	}
	return nil
}

func (x *CurrentTrafficDataByDetectionSectionStatistics) GetLongestDataGapEndTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LongestDataGapEndTimestamp
	}
	return nil
}

func (x *CurrentTrafficDataByDetectionSectionStatistics) GetMissingIntervalDetectionRate() float32 {
	if x != nil {
		return x.MissingIntervalDetectionRate
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionSectionStatistics) GetTotalAverageForwardSpeed() float32 {
	if x != nil {
		return x.TotalAverageForwardSpeed
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionSectionStatistics) GetTotalAverageBackwardSpeed() float32 {
	if x != nil {
		return x.TotalAverageBackwardSpeed
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionSectionStatistics) GetPercentageRecordsWithForwardSpeed() float32 {
	if x != nil {
		return x.PercentageRecordsWithForwardSpeed
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionSectionStatistics) GetPercentageRecordsWithBackwardSpeed() float32 {
	if x != nil {
		return x.PercentageRecordsWithBackwardSpeed
	}
	return 0
}

type CurrentTrafficDataByDetectionPointStatistics struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	DetectionPointId             string                 `protobuf:"bytes,1,opt,name=detection_point_id,json=detectionPointId,proto3" json:"detection_point_id,omitempty"`
	RecordsCount                 uint32                 `protobuf:"varint,2,opt,name=records_count,json=recordsCount,proto3" json:"records_count,omitempty"`
	FirstRecordTimestamp         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=first_record_timestamp,json=firstRecordTimestamp,proto3" json:"first_record_timestamp,omitempty"`
	LastRecordTimestamp          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_record_timestamp,json=lastRecordTimestamp,proto3" json:"last_record_timestamp,omitempty"`
	LongestDataGap               float32                `protobuf:"fixed32,5,opt,name=longest_data_gap,json=longestDataGap,proto3" json:"longest_data_gap,omitempty"`
	LongestDataGapStartTimestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=longest_data_gap_start_timestamp,json=longestDataGapStartTimestamp,proto3" json:"longest_data_gap_start_timestamp,omitempty"`
	LongestDataGapEndTimestamp   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=longest_data_gap_end_timestamp,json=longestDataGapEndTimestamp,proto3" json:"longest_data_gap_end_timestamp,omitempty"`
	MissingIntervalDetectionRate float32                `protobuf:"fixed32,8,opt,name=missing_interval_detection_rate,json=missingIntervalDetectionRate,proto3" json:"missing_interval_detection_rate,omitempty"` // Percentage of expected intervals that are missing data.
	// total
	TotalCountEquivalentVehicles     uint32  `protobuf:"varint,9,opt,name=total_count_equivalent_vehicles,json=totalCountEquivalentVehicles,proto3" json:"total_count_equivalent_vehicles,omitempty"`                   // all counted vehicles
	TotalHarmonicMeanSpeedAllRecords float32 `protobuf:"fixed32,10,opt,name=total_harmonic_mean_speed_all_records,json=totalHarmonicMeanSpeedAllRecords,proto3" json:"total_harmonic_mean_speed_all_records,omitempty"` // mean speed of all means
	// rate
	PercentageRecordsWithEquivalentCounts     float32 `protobuf:"fixed32,11,opt,name=percentage_records_with_equivalent_counts,json=percentageRecordsWithEquivalentCounts,proto3" json:"percentage_records_with_equivalent_counts,omitempty"`               // how many records have at least one count expressed as a percentage
	PercentageRecordsWithPositiveAverageSpeed float32 `protobuf:"fixed32,12,opt,name=percentage_records_with_positive_average_speed,json=percentageRecordsWithPositiveAverageSpeed,proto3" json:"percentage_records_with_positive_average_speed,omitempty"` // how many records have an average speed more than 0 expressed as a percentage
	unknownFields                             protoimpl.UnknownFields
	sizeCache                                 protoimpl.SizeCache
}

func (x *CurrentTrafficDataByDetectionPointStatistics) Reset() {
	*x = CurrentTrafficDataByDetectionPointStatistics{}
	mi := &file_dtos_traffic_statistics_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentTrafficDataByDetectionPointStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentTrafficDataByDetectionPointStatistics) ProtoMessage() {}

func (x *CurrentTrafficDataByDetectionPointStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_dtos_traffic_statistics_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentTrafficDataByDetectionPointStatistics.ProtoReflect.Descriptor instead.
func (*CurrentTrafficDataByDetectionPointStatistics) Descriptor() ([]byte, []int) {
	return file_dtos_traffic_statistics_proto_rawDescGZIP(), []int{3}
}

func (x *CurrentTrafficDataByDetectionPointStatistics) GetDetectionPointId() string {
	if x != nil {
		return x.DetectionPointId
	}
	return ""
}

func (x *CurrentTrafficDataByDetectionPointStatistics) GetRecordsCount() uint32 {
	if x != nil {
		return x.RecordsCount
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointStatistics) GetFirstRecordTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstRecordTimestamp
	}
	return nil
}

func (x *CurrentTrafficDataByDetectionPointStatistics) GetLastRecordTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LastRecordTimestamp
	}
	return nil
}

func (x *CurrentTrafficDataByDetectionPointStatistics) GetLongestDataGap() float32 {
	if x != nil {
		return x.LongestDataGap
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointStatistics) GetLongestDataGapStartTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LongestDataGapStartTimestamp
	}
	return nil
}

func (x *CurrentTrafficDataByDetectionPointStatistics) GetLongestDataGapEndTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LongestDataGapEndTimestamp
	}
	return nil
}

func (x *CurrentTrafficDataByDetectionPointStatistics) GetMissingIntervalDetectionRate() float32 {
	if x != nil {
		return x.MissingIntervalDetectionRate
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointStatistics) GetTotalCountEquivalentVehicles() uint32 {
	if x != nil {
		return x.TotalCountEquivalentVehicles
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointStatistics) GetTotalHarmonicMeanSpeedAllRecords() float32 {
	if x != nil {
		return x.TotalHarmonicMeanSpeedAllRecords
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointStatistics) GetPercentageRecordsWithEquivalentCounts() float32 {
	if x != nil {
		return x.PercentageRecordsWithEquivalentCounts
	}
	return 0
}

func (x *CurrentTrafficDataByDetectionPointStatistics) GetPercentageRecordsWithPositiveAverageSpeed() float32 {
	if x != nil {
		return x.PercentageRecordsWithPositiveAverageSpeed
	}
	return 0
}

// generic
type TrafficStatisticsDetectionPoint struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	DetectionPointId             string                 `protobuf:"bytes,1,opt,name=detection_point_id,json=detectionPointId,proto3" json:"detection_point_id,omitempty"`
	RecordsCount                 uint32                 `protobuf:"varint,2,opt,name=records_count,json=recordsCount,proto3" json:"records_count,omitempty"`
	FirstRecordTimestamp         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=first_record_timestamp,json=firstRecordTimestamp,proto3" json:"first_record_timestamp,omitempty"`
	LastRecordTimestamp          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_record_timestamp,json=lastRecordTimestamp,proto3" json:"last_record_timestamp,omitempty"`
	LongestDataGap               float32                `protobuf:"fixed32,5,opt,name=longest_data_gap,json=longestDataGap,proto3" json:"longest_data_gap,omitempty"`
	LongestDataGapStartTimestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=longest_data_gap_start_timestamp,json=longestDataGapStartTimestamp,proto3" json:"longest_data_gap_start_timestamp,omitempty"`
	LongestDataGapEndTimestamp   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=longest_data_gap_end_timestamp,json=longestDataGapEndTimestamp,proto3" json:"longest_data_gap_end_timestamp,omitempty"`
	MissingIntervalDetectionRate float32                `protobuf:"fixed32,8,opt,name=missing_interval_detection_rate,json=missingIntervalDetectionRate,proto3" json:"missing_interval_detection_rate,omitempty"` // Percentage of expected intervals that are missing data.
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *TrafficStatisticsDetectionPoint) Reset() {
	*x = TrafficStatisticsDetectionPoint{}
	mi := &file_dtos_traffic_statistics_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrafficStatisticsDetectionPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficStatisticsDetectionPoint) ProtoMessage() {}

func (x *TrafficStatisticsDetectionPoint) ProtoReflect() protoreflect.Message {
	mi := &file_dtos_traffic_statistics_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficStatisticsDetectionPoint.ProtoReflect.Descriptor instead.
func (*TrafficStatisticsDetectionPoint) Descriptor() ([]byte, []int) {
	return file_dtos_traffic_statistics_proto_rawDescGZIP(), []int{4}
}

func (x *TrafficStatisticsDetectionPoint) GetDetectionPointId() string {
	if x != nil {
		return x.DetectionPointId
	}
	return ""
}

func (x *TrafficStatisticsDetectionPoint) GetRecordsCount() uint32 {
	if x != nil {
		return x.RecordsCount
	}
	return 0
}

func (x *TrafficStatisticsDetectionPoint) GetFirstRecordTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstRecordTimestamp
	}
	return nil
}

func (x *TrafficStatisticsDetectionPoint) GetLastRecordTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LastRecordTimestamp
	}
	return nil
}

func (x *TrafficStatisticsDetectionPoint) GetLongestDataGap() float32 {
	if x != nil {
		return x.LongestDataGap
	}
	return 0
}

func (x *TrafficStatisticsDetectionPoint) GetLongestDataGapStartTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LongestDataGapStartTimestamp
	}
	return nil
}

func (x *TrafficStatisticsDetectionPoint) GetLongestDataGapEndTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LongestDataGapEndTimestamp
	}
	return nil
}

func (x *TrafficStatisticsDetectionPoint) GetMissingIntervalDetectionRate() float32 {
	if x != nil {
		return x.MissingIntervalDetectionRate
	}
	return 0
}

type TrafficStatisticsDetectionSection struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	DetectionSectionId           string                 `protobuf:"bytes,1,opt,name=detection_section_id,json=detectionSectionId,proto3" json:"detection_section_id,omitempty"`
	RecordsCount                 uint32                 `protobuf:"varint,2,opt,name=records_count,json=recordsCount,proto3" json:"records_count,omitempty"`
	FirstRecordTimestamp         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=first_record_timestamp,json=firstRecordTimestamp,proto3" json:"first_record_timestamp,omitempty"`
	LastRecordTimestamp          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_record_timestamp,json=lastRecordTimestamp,proto3" json:"last_record_timestamp,omitempty"`
	LongestDataGap               float32                `protobuf:"fixed32,5,opt,name=longest_data_gap,json=longestDataGap,proto3" json:"longest_data_gap,omitempty"`
	LongestDataGapStartTimestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=longest_data_gap_start_timestamp,json=longestDataGapStartTimestamp,proto3" json:"longest_data_gap_start_timestamp,omitempty"`
	LongestDataGapEndTimestamp   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=longest_data_gap_end_timestamp,json=longestDataGapEndTimestamp,proto3" json:"longest_data_gap_end_timestamp,omitempty"`
	MissingIntervalDetectionRate float32                `protobuf:"fixed32,8,opt,name=missing_interval_detection_rate,json=missingIntervalDetectionRate,proto3" json:"missing_interval_detection_rate,omitempty"` // Percentage of expected intervals that are missing data.
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *TrafficStatisticsDetectionSection) Reset() {
	*x = TrafficStatisticsDetectionSection{}
	mi := &file_dtos_traffic_statistics_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrafficStatisticsDetectionSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficStatisticsDetectionSection) ProtoMessage() {}

func (x *TrafficStatisticsDetectionSection) ProtoReflect() protoreflect.Message {
	mi := &file_dtos_traffic_statistics_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficStatisticsDetectionSection.ProtoReflect.Descriptor instead.
func (*TrafficStatisticsDetectionSection) Descriptor() ([]byte, []int) {
	return file_dtos_traffic_statistics_proto_rawDescGZIP(), []int{5}
}

func (x *TrafficStatisticsDetectionSection) GetDetectionSectionId() string {
	if x != nil {
		return x.DetectionSectionId
	}
	return ""
}

func (x *TrafficStatisticsDetectionSection) GetRecordsCount() uint32 {
	if x != nil {
		return x.RecordsCount
	}
	return 0
}

func (x *TrafficStatisticsDetectionSection) GetFirstRecordTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstRecordTimestamp
	}
	return nil
}

func (x *TrafficStatisticsDetectionSection) GetLastRecordTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LastRecordTimestamp
	}
	return nil
}

func (x *TrafficStatisticsDetectionSection) GetLongestDataGap() float32 {
	if x != nil {
		return x.LongestDataGap
	}
	return 0
}

func (x *TrafficStatisticsDetectionSection) GetLongestDataGapStartTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LongestDataGapStartTimestamp
	}
	return nil
}

func (x *TrafficStatisticsDetectionSection) GetLongestDataGapEndTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LongestDataGapEndTimestamp
	}
	return nil
}

func (x *TrafficStatisticsDetectionSection) GetMissingIntervalDetectionRate() float32 {
	if x != nil {
		return x.MissingIntervalDetectionRate
	}
	return 0
}

type TrafficStatisticsLane struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	LaneId                       string                 `protobuf:"bytes,1,opt,name=lane_id,json=laneId,proto3" json:"lane_id,omitempty"`
	RecordsCount                 uint32                 `protobuf:"varint,2,opt,name=records_count,json=recordsCount,proto3" json:"records_count,omitempty"`
	FirstRecordTimestamp         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=first_record_timestamp,json=firstRecordTimestamp,proto3" json:"first_record_timestamp,omitempty"`
	LastRecordTimestamp          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_record_timestamp,json=lastRecordTimestamp,proto3" json:"last_record_timestamp,omitempty"`
	LongestDataGap               float32                `protobuf:"fixed32,5,opt,name=longest_data_gap,json=longestDataGap,proto3" json:"longest_data_gap,omitempty"`
	LongestDataGapStartTimestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=longest_data_gap_start_timestamp,json=longestDataGapStartTimestamp,proto3" json:"longest_data_gap_start_timestamp,omitempty"`
	LongestDataGapEndTimestamp   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=longest_data_gap_end_timestamp,json=longestDataGapEndTimestamp,proto3" json:"longest_data_gap_end_timestamp,omitempty"`
	MissingIntervalDetectionRate float32                `protobuf:"fixed32,8,opt,name=missing_interval_detection_rate,json=missingIntervalDetectionRate,proto3" json:"missing_interval_detection_rate,omitempty"` // Percentage of expected intervals that are missing data.
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *TrafficStatisticsLane) Reset() {
	*x = TrafficStatisticsLane{}
	mi := &file_dtos_traffic_statistics_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrafficStatisticsLane) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficStatisticsLane) ProtoMessage() {}

func (x *TrafficStatisticsLane) ProtoReflect() protoreflect.Message {
	mi := &file_dtos_traffic_statistics_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficStatisticsLane.ProtoReflect.Descriptor instead.
func (*TrafficStatisticsLane) Descriptor() ([]byte, []int) {
	return file_dtos_traffic_statistics_proto_rawDescGZIP(), []int{6}
}

func (x *TrafficStatisticsLane) GetLaneId() string {
	if x != nil {
		return x.LaneId
	}
	return ""
}

func (x *TrafficStatisticsLane) GetRecordsCount() uint32 {
	if x != nil {
		return x.RecordsCount
	}
	return 0
}

func (x *TrafficStatisticsLane) GetFirstRecordTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstRecordTimestamp
	}
	return nil
}

func (x *TrafficStatisticsLane) GetLastRecordTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LastRecordTimestamp
	}
	return nil
}

func (x *TrafficStatisticsLane) GetLongestDataGap() float32 {
	if x != nil {
		return x.LongestDataGap
	}
	return 0
}

func (x *TrafficStatisticsLane) GetLongestDataGapStartTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LongestDataGapStartTimestamp
	}
	return nil
}

func (x *TrafficStatisticsLane) GetLongestDataGapEndTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LongestDataGapEndTimestamp
	}
	return nil
}

func (x *TrafficStatisticsLane) GetMissingIntervalDetectionRate() float32 {
	if x != nil {
		return x.MissingIntervalDetectionRate
	}
	return 0
}

var File_dtos_traffic_statistics_proto protoreflect.FileDescriptor

const file_dtos_traffic_statistics_proto_rawDesc = "" +
	"\n" +
	"\x1ddtos/traffic_statistics.proto\x12\x02pb\x1a\x1fgoogle/protobuf/timestamp.proto\"\xfb\x06\n" +
	"2CurrentTrafficDataByDetectionPointByLaneStatistics\x12\x17\n" +
	"\alane_id\x18\x01 \x01(\tR\x06laneId\x12#\n" +
	"\rrecords_count\x18\x02 \x01(\rR\frecordsCount\x12P\n" +
	"\x16first_record_timestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x14firstRecordTimestamp\x12N\n" +
	"\x15last_record_timestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x13lastRecordTimestamp\x12(\n" +
	"\x10longest_data_gap\x18\x05 \x01(\x02R\x0elongestDataGap\x12b\n" +
	" longest_data_gap_start_timestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x1clongestDataGapStartTimestamp\x12^\n" +
	"\x1elongest_data_gap_end_timestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x1alongestDataGapEndTimestamp\x12E\n" +
	"\x1fmissing_interval_detection_rate\x18\b \x01(\x02R\x1cmissingIntervalDetectionRate\x127\n" +
	"\x18total_count_all_vehicles\x18\t \x01(\rR\x15totalCountAllVehicles\x12O\n" +
	"%total_harmonic_mean_speed_all_records\x18\n" +
	" \x01(\x02R totalHarmonicMeanSpeedAllRecords\x12C\n" +
	"\x1epercentage_records_with_counts\x18\v \x01(\x02R\x1bpercentageRecordsWithCounts\x12a\n" +
	".percentage_records_with_positive_average_speed\x18\f \x01(\x02R)percentageRecordsWithPositiveAverageSpeed\"\xe2\x06\n" +
	"1CurrentTrafficDataByDetectionPointByLaneAggregate\x12(\n" +
	"\x10data_source_name\x18\x01 \x01(\tR\x0edataSourceName\x12K\n" +
	"\x13detection_timestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x12detectionTimestamp\x12#\n" +
	"\rrecords_count\x18\x03 \x01(\rR\frecordsCount\x124\n" +
	"\x16agg_percentage_records\x18\x04 \x01(\x02R\x14aggPercentageRecords\x12J\n" +
	"\"agg_percentage_records_with_counts\x18\x05 \x01(\x02R\x1eaggPercentageRecordsWithCounts\x12h\n" +
	"2agg_percentage_records_with_positive_average_speed\x18\x06 \x01(\x02R,aggPercentageRecordsWithPositiveAverageSpeed\x12<\n" +
	"\x1bagg_count_vehicle_class_all\x18\a \x01(\x02R\x17aggCountVehicleClassAll\x12V\n" +
	")agg_harmonic_mean_speed_vehicle_class_all\x18\b \x01(\x02R#aggHarmonicMeanSpeedVehicleClassAll\x12;\n" +
	"\x1aagg_average_vehicle_length\x18\t \x01(\x02R\x17aggAverageVehicleLength\x12.\n" +
	"\x13agg_average_headway\x18\n" +
	" \x01(\x02R\x11aggAverageHeadway\x12&\n" +
	"\x0fagg_std_headway\x18\v \x01(\x02R\raggStdHeadway\x12@\n" +
	"\x1dagg_average_time_to_collision\x18\f \x01(\x02R\x19aggAverageTimeToCollision\x128\n" +
	"\x19agg_std_time_to_collision\x18\r \x01(\x02R\x15aggStdTimeToCollision\"\x84\a\n" +
	".CurrentTrafficDataByDetectionSectionStatistics\x120\n" +
	"\x14detection_section_id\x18\x01 \x01(\tR\x12detectionSectionId\x12#\n" +
	"\rrecords_count\x18\x02 \x01(\rR\frecordsCount\x12P\n" +
	"\x16first_record_timestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x14firstRecordTimestamp\x12N\n" +
	"\x15last_record_timestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x13lastRecordTimestamp\x12(\n" +
	"\x10longest_data_gap\x18\x05 \x01(\x02R\x0elongestDataGap\x12b\n" +
	" longest_data_gap_start_timestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x1clongestDataGapStartTimestamp\x12^\n" +
	"\x1elongest_data_gap_end_timestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x1alongestDataGapEndTimestamp\x12E\n" +
	"\x1fmissing_interval_detection_rate\x18\b \x01(\x02R\x1cmissingIntervalDetectionRate\x12=\n" +
	"\x1btotal_average_forward_speed\x18\t \x01(\x02R\x18totalAverageForwardSpeed\x12?\n" +
	"\x1ctotal_average_backward_speed\x18\n" +
	" \x01(\x02R\x19totalAverageBackwardSpeed\x12P\n" +
	"%percentage_records_with_forward_speed\x18\v \x01(\x02R!percentageRecordsWithForwardSpeed\x12R\n" +
	"&percentage_records_with_backward_speed\x18\f \x01(\x02R\"percentageRecordsWithBackwardSpeed\"\xad\a\n" +
	",CurrentTrafficDataByDetectionPointStatistics\x12,\n" +
	"\x12detection_point_id\x18\x01 \x01(\tR\x10detectionPointId\x12#\n" +
	"\rrecords_count\x18\x02 \x01(\rR\frecordsCount\x12P\n" +
	"\x16first_record_timestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x14firstRecordTimestamp\x12N\n" +
	"\x15last_record_timestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x13lastRecordTimestamp\x12(\n" +
	"\x10longest_data_gap\x18\x05 \x01(\x02R\x0elongestDataGap\x12b\n" +
	" longest_data_gap_start_timestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x1clongestDataGapStartTimestamp\x12^\n" +
	"\x1elongest_data_gap_end_timestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x1alongestDataGapEndTimestamp\x12E\n" +
	"\x1fmissing_interval_detection_rate\x18\b \x01(\x02R\x1cmissingIntervalDetectionRate\x12E\n" +
	"\x1ftotal_count_equivalent_vehicles\x18\t \x01(\rR\x1ctotalCountEquivalentVehicles\x12O\n" +
	"%total_harmonic_mean_speed_all_records\x18\n" +
	" \x01(\x02R totalHarmonicMeanSpeedAllRecords\x12X\n" +
	")percentage_records_with_equivalent_counts\x18\v \x01(\x02R%percentageRecordsWithEquivalentCounts\x12a\n" +
	".percentage_records_with_positive_average_speed\x18\f \x01(\x02R)percentageRecordsWithPositiveAverageSpeed\"\xcb\x04\n" +
	"\x1fTrafficStatisticsDetectionPoint\x12,\n" +
	"\x12detection_point_id\x18\x01 \x01(\tR\x10detectionPointId\x12#\n" +
	"\rrecords_count\x18\x02 \x01(\rR\frecordsCount\x12P\n" +
	"\x16first_record_timestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x14firstRecordTimestamp\x12N\n" +
	"\x15last_record_timestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x13lastRecordTimestamp\x12(\n" +
	"\x10longest_data_gap\x18\x05 \x01(\x02R\x0elongestDataGap\x12b\n" +
	" longest_data_gap_start_timestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x1clongestDataGapStartTimestamp\x12^\n" +
	"\x1elongest_data_gap_end_timestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x1alongestDataGapEndTimestamp\x12E\n" +
	"\x1fmissing_interval_detection_rate\x18\b \x01(\x02R\x1cmissingIntervalDetectionRate\"\xd1\x04\n" +
	"!TrafficStatisticsDetectionSection\x120\n" +
	"\x14detection_section_id\x18\x01 \x01(\tR\x12detectionSectionId\x12#\n" +
	"\rrecords_count\x18\x02 \x01(\rR\frecordsCount\x12P\n" +
	"\x16first_record_timestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x14firstRecordTimestamp\x12N\n" +
	"\x15last_record_timestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x13lastRecordTimestamp\x12(\n" +
	"\x10longest_data_gap\x18\x05 \x01(\x02R\x0elongestDataGap\x12b\n" +
	" longest_data_gap_start_timestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x1clongestDataGapStartTimestamp\x12^\n" +
	"\x1elongest_data_gap_end_timestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x1alongestDataGapEndTimestamp\x12E\n" +
	"\x1fmissing_interval_detection_rate\x18\b \x01(\x02R\x1cmissingIntervalDetectionRate\"\xac\x04\n" +
	"\x15TrafficStatisticsLane\x12\x17\n" +
	"\alane_id\x18\x01 \x01(\tR\x06laneId\x12#\n" +
	"\rrecords_count\x18\x02 \x01(\rR\frecordsCount\x12P\n" +
	"\x16first_record_timestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x14firstRecordTimestamp\x12N\n" +
	"\x15last_record_timestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x13lastRecordTimestamp\x12(\n" +
	"\x10longest_data_gap\x18\x05 \x01(\x02R\x0elongestDataGap\x12b\n" +
	" longest_data_gap_start_timestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x1clongestDataGapStartTimestamp\x12^\n" +
	"\x1elongest_data_gap_end_timestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x1alongestDataGapEndTimestamp\x12E\n" +
	"\x1fmissing_interval_detection_rate\x18\b \x01(\x02R\x1cmissingIntervalDetectionRateB\x12Z\x10internal/data/pbb\x06proto3"

var (
	file_dtos_traffic_statistics_proto_rawDescOnce sync.Once
	file_dtos_traffic_statistics_proto_rawDescData []byte
)

func file_dtos_traffic_statistics_proto_rawDescGZIP() []byte {
	file_dtos_traffic_statistics_proto_rawDescOnce.Do(func() {
		file_dtos_traffic_statistics_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dtos_traffic_statistics_proto_rawDesc), len(file_dtos_traffic_statistics_proto_rawDesc)))
	})
	return file_dtos_traffic_statistics_proto_rawDescData
}

var file_dtos_traffic_statistics_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_dtos_traffic_statistics_proto_goTypes = []any{
	(*CurrentTrafficDataByDetectionPointByLaneStatistics)(nil), // 0: pb.CurrentTrafficDataByDetectionPointByLaneStatistics
	(*CurrentTrafficDataByDetectionPointByLaneAggregate)(nil),  // 1: pb.CurrentTrafficDataByDetectionPointByLaneAggregate
	(*CurrentTrafficDataByDetectionSectionStatistics)(nil),     // 2: pb.CurrentTrafficDataByDetectionSectionStatistics
	(*CurrentTrafficDataByDetectionPointStatistics)(nil),       // 3: pb.CurrentTrafficDataByDetectionPointStatistics
	(*TrafficStatisticsDetectionPoint)(nil),                    // 4: pb.TrafficStatisticsDetectionPoint
	(*TrafficStatisticsDetectionSection)(nil),                  // 5: pb.TrafficStatisticsDetectionSection
	(*TrafficStatisticsLane)(nil),                              // 6: pb.TrafficStatisticsLane
	(*timestamppb.Timestamp)(nil),                              // 7: google.protobuf.Timestamp
}
var file_dtos_traffic_statistics_proto_depIdxs = []int32{
	7,  // 0: pb.CurrentTrafficDataByDetectionPointByLaneStatistics.first_record_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 1: pb.CurrentTrafficDataByDetectionPointByLaneStatistics.last_record_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 2: pb.CurrentTrafficDataByDetectionPointByLaneStatistics.longest_data_gap_start_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 3: pb.CurrentTrafficDataByDetectionPointByLaneStatistics.longest_data_gap_end_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 4: pb.CurrentTrafficDataByDetectionPointByLaneAggregate.detection_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 5: pb.CurrentTrafficDataByDetectionSectionStatistics.first_record_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 6: pb.CurrentTrafficDataByDetectionSectionStatistics.last_record_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 7: pb.CurrentTrafficDataByDetectionSectionStatistics.longest_data_gap_start_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 8: pb.CurrentTrafficDataByDetectionSectionStatistics.longest_data_gap_end_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 9: pb.CurrentTrafficDataByDetectionPointStatistics.first_record_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 10: pb.CurrentTrafficDataByDetectionPointStatistics.last_record_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 11: pb.CurrentTrafficDataByDetectionPointStatistics.longest_data_gap_start_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 12: pb.CurrentTrafficDataByDetectionPointStatistics.longest_data_gap_end_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 13: pb.TrafficStatisticsDetectionPoint.first_record_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 14: pb.TrafficStatisticsDetectionPoint.last_record_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 15: pb.TrafficStatisticsDetectionPoint.longest_data_gap_start_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 16: pb.TrafficStatisticsDetectionPoint.longest_data_gap_end_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 17: pb.TrafficStatisticsDetectionSection.first_record_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 18: pb.TrafficStatisticsDetectionSection.last_record_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 19: pb.TrafficStatisticsDetectionSection.longest_data_gap_start_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 20: pb.TrafficStatisticsDetectionSection.longest_data_gap_end_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 21: pb.TrafficStatisticsLane.first_record_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 22: pb.TrafficStatisticsLane.last_record_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 23: pb.TrafficStatisticsLane.longest_data_gap_start_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 24: pb.TrafficStatisticsLane.longest_data_gap_end_timestamp:type_name -> google.protobuf.Timestamp
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_dtos_traffic_statistics_proto_init() }
func file_dtos_traffic_statistics_proto_init() {
	if File_dtos_traffic_statistics_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dtos_traffic_statistics_proto_rawDesc), len(file_dtos_traffic_statistics_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dtos_traffic_statistics_proto_goTypes,
		DependencyIndexes: file_dtos_traffic_statistics_proto_depIdxs,
		MessageInfos:      file_dtos_traffic_statistics_proto_msgTypes,
	}.Build()
	File_dtos_traffic_statistics_proto = out.File
	file_dtos_traffic_statistics_proto_goTypes = nil
	file_dtos_traffic_statistics_proto_depIdxs = nil
}
