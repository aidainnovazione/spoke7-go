syntax = "proto3";

package pb;

import "google/protobuf/timestamp.proto";

option go_package = "internal/data/pb";

  
// I dati correnti vengono conservati con riferimento agli ultimi dodici mesi e 
// vengono archiviati in maniera da essere recuperati su base giornaliera. 

message CurrentTrafficDataEnforcementByDetectionPoint {
    google.protobuf.Timestamp created_at = 1;
    google.protobuf.Timestamp modified_at = 2;
    string data_source_name = 3;
    string detection_point_id = 4;

    // campi relativi all'interallo di aggregazione di 5 min -> dipende dal db
    google.protobuf.Timestamp detection_timestamp = 5;
    uint32 detection_interval = 6;

    // numero di violazioni rilevate
    uint32 violation_count_vehicle_class_1 = 7;
    uint32 violation_count_vehicle_class_2 = 8;
    uint32 violation_count_vehicle_class_3 = 9;
    uint32 violation_count_vehicle_class_4 = 10;
    uint32 violation_count_vehicle_class_5 = 11;
    uint32 violation_count_vehicle_class_6 = 12;
    uint32 violation_count_vehicle_class_7 = 13;
    uint32 violation_count_vehicle_class_8 = 14;

    uint32 violation_count_vehicle_class_equivalent = 15;

    // entità delle violazioni
    // Somma sull’intervallo di aggregazione del numero di osservazioni superiori 
    // ai limiti di velocità ricadenti all’interno di prefissate classi di velocità
    uint32 entity_count_vehicle_under_50 = 27;
    uint32 entity_count_vehicle_between_50_100 = 28;
    uint32 entity_count_vehicle_over_100 = 29;


    repeated CurrentTrafficDataEnforcementByLane current_traffic_data_by_lane = 33;
}

message CurrentTrafficDataEnforcementByLane {
    google.protobuf.Timestamp created_at = 1;
    google.protobuf.Timestamp modified_at = 2;
    string data_source_name = 3;
    string detection_point_id = 4;
    string lane_id = 5; // definisce univocamente detection_point_id

    // campi relativi all'interallo di aggregazione di 5 min -> dipende dal db
    google.protobuf.Timestamp detection_timestamp = 6;
    uint32 detection_interval = 7;

    // numero di violazioni rilevate
    uint32 violation_count_vehicle_class_1 = 8;
    uint32 violation_count_vehicle_class_2 = 9;
    uint32 violation_count_vehicle_class_3 = 10;
    uint32 violation_count_vehicle_class_4 = 11;
    uint32 violation_count_vehicle_class_5 = 12;
    uint32 violation_count_vehicle_class_6 = 13;
    uint32 violation_count_vehicle_class_7 = 14;
    uint32 violation_count_vehicle_class_8 = 15;

    uint32 violation_count_vehicle_class_equivalent = 16;

    // entità delle violazioni
    // Somma sull’intervallo di aggregazione del numero di osservazioni superiori 
    // ai limiti di velocità ricadenti all’interno di prefissate classi di velocità
    uint32 entity_count_vehicle_under_50 = 17;
    uint32 entity_count_vehicle_between_50_100 = 18;
    uint32 entity_count_vehicle_over_100 = 19;
}
