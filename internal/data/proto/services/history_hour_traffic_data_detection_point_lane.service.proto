syntax = "proto3";

package pb;

option go_package = "internal/data/pb";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "dtos/history_hour_traffic_data_detection_point_lane.proto";
import "dtos/traffic_requests.proto";
import "dtos/traffic_responses.proto";


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  security_definitions: {
    security: {
      key: "bearer"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Authentication token, prefixed by Bearer: Bearer <token>"
      }
    }
  }
  security: {
    security_requirement: {
      key: "bearer"
    }
  }
};

service HistoryHourTrafficDataByDetectionPointByLaneService {
  rpc ListHistoryHourTrafficDataByDetectionPointByLane(ListTrafficDataByDetectionPointByLaneRequest) returns (ListHistoryHourTrafficDataByDetectionPointByLaneResponse) {
    option (google.api.http) = {
      get: "/api/v1/traffic/history_hour/detection_point/lane/list"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "bearer";
        }
      }
    };
  }

  rpc GetHistoryHourTrafficDataByDetectionPointByLane(GetTrafficDataByDetectionPointByLaneRequest) returns (GetHistoryHourTrafficDataByDetectionPointByLaneResponse) {
    option (google.api.http) = {
      get: "/api/v1/traffic/history_hour/detection_point/lane/single"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "bearer";
        }
      }
    };
  }

  rpc CreateHistoryHourTrafficDataByDetectionPointByLane(CreateHistoryHourTrafficDataByDetectionPointByLaneRequest) returns (CreateHistoryHourTrafficDataByDetectionPointByLaneResponse) {
    option (google.api.http) = {
      post: "/api/v1/traffic/history_hour/detection_point/lane",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "bearer";
        }
      }
    };
  }

  rpc UpdateHistoryHourTrafficDataByDetectionPointByLane(UpdateHistoryHourTrafficDataByDetectionPointByLaneRequest) returns (UpdateHistoryHourTrafficDataByDetectionPointByLaneResponse) {
    option (google.api.http) = {
      patch: "/api/v1/traffic/history_hour/detection_point/lane",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "bearer";
        }
      }
    };
  }

  rpc DeleteHistoryHourTrafficDataByDetectionPointByLane(DeleteTrafficDataByDetectionPointByLaneRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/traffic/history_hour/detection_point/lane"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "bearer";
        }
      }
    };
  }


  rpc BulkCreateHistoryHourTrafficDataByDetectionPointByLane(BulkCreateTrafficDataByDetectionPointByLaneRequest) returns (BulkCreateTrafficDataByDetectionPointByLaneResponse) {
    option (google.api.http) = {
      post: "/api/v1/traffic/history_hour/detection_point/lane/bulk",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "bearer";
        }
      }
    };
  }

  rpc GetHistoryHourTrafficDataByDetectionPointByLaneStatistics(GetTrafficDataByDetectionPointByLaneStatisticsRequest) returns (GetTrafficDataByDetectionPointByLaneStatisticsResponse) {
    option (google.api.http) = {
      get: "/api/v1/traffic/history_hour/detection_point/lane/statistics"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "bearer";
        }
      }
    };
  }

  rpc ListHistoryHourTrafficDataByDetectionPointByLaneDaily(ListTrafficDataByDetectionPointByLaneDailyRequest) returns (ListHistoryHourTrafficDataByDetectionPointByLaneDailyResponse) {
    option (google.api.http) = {
      get: "/api/v1/traffic/history_hour/detection_point/lane/daily"     
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "bearer";
        }
      }
    };
  }

  rpc DownloadHistoryHourTrafficDataByDetectionPointByLane(DownloadTrafficDataByDetectionPointByLaneRequest) returns (DownloadResponse) {
    option (google.api.http) = {
      get: "/api/v1/traffic/history_hour/detection_point/lane/download"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "bearer";
        }
      }
    };
  }
}



message ListHistoryHourTrafficDataByDetectionPointByLaneResponse {
  repeated HistoryHourTrafficDataByDetectionPointByLane history_hour_traffic_data_by_detection_point_by_lane = 1;
  uint32 total_count = 2;
}


message GetHistoryHourTrafficDataByDetectionPointByLaneResponse {
  repeated HistoryHourTrafficDataByDetectionPointByLane history_hour_traffic_data_by_detection_point_by_lane = 1;
  uint32 total_count = 2;
}

message CreateHistoryHourTrafficDataByDetectionPointByLaneRequest {
  HistoryHourTrafficDataByDetectionPointByLane history_hour_traffic_data_by_detection_point_by_lane = 1;
}

message CreateHistoryHourTrafficDataByDetectionPointByLaneResponse {
  HistoryHourTrafficDataByDetectionPointByLane history_hour_traffic_data_by_detection_point_by_lane = 1;
}

message UpdateHistoryHourTrafficDataByDetectionPointByLaneRequest {
  HistoryHourTrafficDataByDetectionPointByLane history_hour_traffic_data_by_detection_point_by_lane = 1;
}

message UpdateHistoryHourTrafficDataByDetectionPointByLaneResponse {
  HistoryHourTrafficDataByDetectionPointByLane history_hour_traffic_data_by_detection_point_by_lane = 1;
}

message ListHistoryHourTrafficDataByDetectionPointByLaneDailyResponse {
  repeated HistoryHourTrafficDataByDetectionPointByLane daily_stats = 1;
}
