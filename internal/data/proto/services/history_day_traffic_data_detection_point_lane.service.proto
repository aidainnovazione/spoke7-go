syntax = "proto3";

package pb;

option go_package = "internal/data/pb";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "dtos/history_day_traffic_data_detection_point_lane.proto";
import "dtos/traffic_requests.proto";
import "dtos/traffic_responses.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  security_definitions: {
    security: {
      key: "bearer"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Authentication token, prefixed by Bearer: Bearer <token>"
      }
    }
  }
  security: {
    security_requirement: {
      key: "bearer"
    }
  }
};

service HistoryDayTrafficDataByDetectionPointByLaneService {
  rpc ListHistoryDayTrafficDataByDetectionPointByLane(ListTrafficDataByDetectionPointByLaneRequest) returns (ListHistoryDayTrafficDataByDetectionPointByLaneResponse) {
    option (google.api.http) = {
      get: "/api/v1/traffic/history_day/detection_point/lane/list"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "bearer";
        }
      }
    };
  }

  rpc GetHistoryDayTrafficDataByDetectionPointByLane(GetTrafficDataByDetectionPointByLaneRequest) returns (GetHistoryDayTrafficDataByDetectionPointByLaneResponse) {
    option (google.api.http) = {
      get: "/api/v1/traffic/history_day/detection_point/lane/single"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "bearer";
        }
      }
    };
  }

  rpc CreateHistoryDayTrafficDataByDetectionPointByLane(CreateHistoryDayTrafficDataByDetectionPointByLaneRequest) returns (CreateHistoryDayTrafficDataByDetectionPointByLaneResponse) {
    option (google.api.http) = {
      post: "/api/v1/traffic/history_day/detection_point/lane",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "bearer";
        }
      }
    };
  }

  rpc UpdateHistoryDayTrafficDataByDetectionPointByLane(UpdateHistoryDayTrafficDataByDetectionPointByLaneRequest) returns (UpdateHistoryDayTrafficDataByDetectionPointByLaneResponse) {
    option (google.api.http) = {
      patch: "/api/v1/traffic/history_day/detection_point/lane",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "bearer";
        }
      }
    };
  }

  rpc DeleteHistoryDayTrafficDataByDetectionPointByLane(DeleteTrafficDataByDetectionPointByLaneRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/traffic/history_day/detection_point/lane"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "bearer";
        }
      }
    };
  }


  rpc BulkCreateHistoryDayTrafficDataByDetectionPointByLane(BulkCreateTrafficDataByDetectionPointByLaneRequest) returns (BulkCreateTrafficDataByDetectionPointByLaneResponse) {
    option (google.api.http) = {
      post: "/api/v1/traffic/history_day/detection_point/lane/bulk",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "bearer";
        }
      }
    };
  }

  rpc GetHistoryDayTrafficDataByDetectionPointByLaneStatistics(GetTrafficDataByDetectionPointByLaneStatisticsRequest) returns (GetTrafficDataByDetectionPointByLaneStatisticsResponse) {
    option (google.api.http) = {
      get: "/api/v1/traffic/history_day/detection_point/lane/statistics"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "bearer";
        }
      }
    };
  }

  rpc ListHistoryDayTrafficDataByDetectionPointByLaneDaily(ListTrafficDataByDetectionPointByLaneDailyRequest) returns (ListHistoryDayTrafficDataByDetectionPointByLaneDailyResponse) {
    option (google.api.http) = {
      get: "/api/v1/traffic/history_day/detection_point/lane/daily"     
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "bearer";
        }
      }
    };
  }

  rpc DownloadHistoryDayTrafficDataByDetectionPointByLane(DownloadTrafficDataByDetectionPointByLaneRequest) returns (DownloadResponse) {
    option (google.api.http) = {
      get: "/api/v1/traffic/history_day/detection_point/lane/download"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "bearer";
        }
      }
    };
  }
}



message ListHistoryDayTrafficDataByDetectionPointByLaneResponse {
  repeated HistoryDayTrafficDataByDetectionPointByLane history_day_traffic_data_by_detection_point_by_lane = 1;
  uint32 total_count = 2;
}

message GetHistoryDayTrafficDataByDetectionPointByLaneResponse {
  repeated HistoryDayTrafficDataByDetectionPointByLane history_day_traffic_data_by_detection_point_by_lane = 1;
  uint32 total_count = 2;
}

message CreateHistoryDayTrafficDataByDetectionPointByLaneRequest {
  HistoryDayTrafficDataByDetectionPointByLane history_day_traffic_data_by_detection_point_by_lane = 1;
}

message CreateHistoryDayTrafficDataByDetectionPointByLaneResponse {
  HistoryDayTrafficDataByDetectionPointByLane history_day_traffic_data_by_detection_point_by_lane = 1;
}

message UpdateHistoryDayTrafficDataByDetectionPointByLaneRequest {
  HistoryDayTrafficDataByDetectionPointByLane history_day_traffic_data_by_detection_point_by_lane = 1;
}

message UpdateHistoryDayTrafficDataByDetectionPointByLaneResponse {
  HistoryDayTrafficDataByDetectionPointByLane history_day_traffic_data_by_detection_point_by_lane = 1;
}

message ListHistoryDayTrafficDataByDetectionPointByLaneDailyResponse {
  repeated HistoryDayTrafficDataByDetectionPointByLane daily_stats = 1;
}
